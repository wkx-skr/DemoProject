package com.andorj.common.core.model;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import java.util.stream.Collectors;

// *******************************************************************************
// <copyright company='Jinbao.inc'>
// Copyright (c) 2016 Jinbao. All rights reserved
//
// Author : This is automatically generated by LDM Designer, dont modify manually.
// Created: 11/24/2016
// </copyright>
// *******************************************************************************

public class LDMTypes {

  public static final long LDM_TopRoot = 99999999;
  public static UUID LDM_RootUID = UUID.fromString("69c19e1e-a8ff-40f9-80f1-23db1c98fa93");
  public static final long LDM_Seed = 90000000;

  // M2 def, do not use it in general
  public static final long mObjectType = LDM_Seed + 2016;
  public static final long mAggregationType = LDM_Seed + 2024;
  public static final long mPropertyType = LDM_Seed + 2032;
  public static final long mAssociationType = LDM_Seed + 2048;

  // M1 def
  public static final long pTypeId = LDM_Seed + 1;
  public static final long pId = LDM_Seed + 2;
  public static final long pName = LDM_Seed + 3;
  public static final long pDefinition = LDM_Seed + 4;
  public static final long pValueType = LDM_Seed + 5;
  public static final long pUniqueId = LDM_Seed + 6;
  public static final long pTypeUniqueId = LDM_Seed + 7;
  public static final long pClassName = LDM_Seed + 8;
  public static final long pEnum = LDM_Seed + 9;
  public static final long pOwnerRef = LDM_Seed + 10;
  public static final long pOwneeRef = LDM_Seed + 11;
  public static final long pIsVisible = LDM_Seed + 12;
  public static final long pClassType = LDM_Seed + 13;
  public static final long pIsReference = LDM_Seed + 14;
  public static final long pFriendlyName = LDM_Seed + 15;
  public static final long pIsDBPhysical = LDM_Seed + 16;
  public static final long pAutoId = LDM_Seed + 17;
  public static final long pStartVersion = LDM_Seed + 18;
  public static final long pEndVersion = LDM_Seed + 19;
  public static final long pIsArray = LDM_Seed + 20;
  public static final long pIsUDP = LDM_Seed + 21;
  public static final long pDefaultUDPValue = LDM_Seed + 22;
  public static final long pUDPFingerPrint = LDM_Seed + 23;
  public static final long pIsDynamicOnEditor = LDM_Seed + 24;
  public static final long pUDPOrder = LDM_Seed + 25;
  public static final long pIsRequired = LDM_Seed + 26;
  public static final long pPageName = LDM_Seed + 27;
  public static final long pExtendedEnumStruct = LDM_Seed + 28;
  public static final long pExtendedEnumParentRef = LDM_Seed + 29;
  public static final long pExtendedEnumMultiple = LDM_Seed + 30;
  public static final long pUdpValueType = LDM_Seed + 31;
  public static final long pUdpDbType = LDM_Seed + 32;
  public static final long pDoNotInherit = LDM_Seed + 33;
  public static final long pIsLongText = LDM_Seed + 34;
  public static final long pObjTypeRef = LDM_Seed + 35;
  public static final long pObjUsageType = LDM_Seed + 38;

  // Property Ids
  public static final long pOrigin = 80000001;
  public static final long pDataType = 80000002;
  public static final long pLocation = 80000003;
  public static final long pDataStore = 80000020;
  public static final long pLabel = 80000021;
  public static final long pText = 80000022;
  public static final long pIsCollapsed = 80000023;
  public static final long pWidth = 80000024;
  public static final long pHeight = 80000025;
  public static final long pShapeSize = 80000026;
  public static final long pIsExpanded = 80000029;
  public static final long pTargetDB = 80000031;
  public static final long pModelGroup = 80000033;
  public static final long pParentEntityRef = 80000052;
  public static final long pChildEntityRef = 80000053;
  public static final long pParentKeyRef = 80000054;
  public static final long pChildKeyRef = 80000055;
  public static final long pParentShapeRef = 80000060;
  public static final long pChildShapeRef = 80000061;
  public static final long pNotationType = 80000069;
  public static final long pRelationalType = 80000070;
  public static final long pStartCardinality = 80000071;
  public static final long pEndCardinality = 80000072;
  public static final long pDirection = 80000073;
  public static final long pStartRole = 80000074;
  public static final long pEndRole = 80000075;
  public static final long pStartMultiplicity = 80000076;
  public static final long pEndMultiplicity = 80000077;
  public static final long pArraySize = 80000087;
  public static final long pInfo = 80000089;
  public static final long pStatistics = 80000091;
  public static final long pRelationshipRef = 80000095;
  public static final long pKeyGroupMemberRefs = 80000096;
  public static final long pKeyGroupType = 80000097;
  public static final long pAuthor = 80000104;
  public static final long pIsSparse = 80300000;
  public static final long pPartialFilter = 80300001;
  public static final long pExpireAfterSeconds = 80300002;
  public static final long pDefaultLanguage = 80300003;
  public static final long pWeights = 80300005;
  public static final long pIsUnique = 80300006;
  public static final long pLanguageOverride = 80300007;
  public static final long pWildcardTextIndex = 80300015;
  public static final long pLowerBound = 80300017;
  public static final long pUpperBound = 80300018;
  public static final long pBitPrecision = 80300019;
  public static final long p2DSphereVersion = 80300020;
  public static final long pBucketSize = 80300021;
  public static final long pCapped = 80300027;
  public static final long pMaxSize = 80300029;
  public static final long pMaxDocs = 80300030;
  public static final long pDatabaseRef = 80300047;
  public static final long pShardIndexRef = 80300049;
  public static final long pShardInfo = 80300051;
  public static final long pPatternInfo = 80300053;
  public static final long pTagUniqueRef = 80010005;
  public static final long pDataSourceId = 80100002;
  public static final long pBendpoints = 80500057;
  public static final long pStyleBackColor = 80500087;
  public static final long pStyleBackColor2 = 80500088;
  public static final long pStyleFont = 80500089;
  public static final long pStyleTextColor = 80500090;

  public static final long pRowCount = 80400001;
  public static final long pLastUpdateTime = 80400003;
  public static final long pSchemaRef = 80700005;
  public static final long pSchemaName = 82800030;
  public static final long pTags = 80100021;
  public static final long pOriginal = 80100019;
  public static final long pObjectArray = 80100004;
  public static final long pLogicalName = 80100005;
  public static final long pPhysicalName = 80100006;
  public static final long pColumnOrderArray = 80100007;
  public static final long pErwinTargetDB = 82000001;
  public static final long pDuration = 80010028;
  public static final long pUserTags = 80400005;
  public static final long pOrdinal = 80400006;
  public static final long pDataPrecision = 80000107;
  public static final long pDataScale = 80100032;
  public static final long pIsNotNull = 80100033;
  public static final long pDefaultValue = 80100034;
  public static final long pIsAutoIncrement = 80100035;
  public static final long pIsAutoRandom = 80500243;
  public static final long pAutoRandomSharding = 80500245;
  public static final long pAutoRandomRange = 80500246;
  public static final long pIsClustered = 80500247;
  public static final long pLogicalDataType = 80100040;
  public static final long pActionType = 82000036;
  public static final long pAttributeRef = 80500005;
  public static final long pOrderType = 80500007;
  public static final long pEngine = 80500068;
  public static final long pCharacterSet = 80500069;
  public static final long pCollation = 80500070;
  public static final long pSubTypeRef = 80100044;
  public static final long pSubtypeType = 80100047;

  public static final long pPartitionType        = 80500016;
  public static final long pPartitionsNumber     = 80500017;
  public static final long pPartitionMemberOrderRefs = 80500031;
  public static final long pPartitionMemberExpression = 80500032;
  public static final long pPartitionElementOrderRefs = 80500035;

  public static final long pClusterMemberRefs    = 81300010;
  public static final long pSortedByMemberRefs   = 81300011;
  public static final long pRowFormat            = 81300023;
  public static final long pFieldsTerminatedBy   = 81300034;
  public static final long pEscapedBy            = 81300035;
  public static final long pCollectionItemsTerminatedBy = 81300036;
  public static final long pMapKeysTerminatedBy  = 81300037;
  public static final long pLinesTerminatedBy    = 81300038;
  public static final long pNullDefinedAs        = 81300039;
  public static final long pCommonMemberRefs     = 80500086;
  public static final long pStoredAs             = 81300047;
  public static final long pStoredBy             = 81300048;
  public static final long pStoreType            = 81300051;
  public static final long pPath                 = 81300061;
  public static final long pDataStandardCode     = 80010111;
  public static final long pDataStandardRef      = 80500058;

  public static final long pReference            = 80500060;
  public static final long pSQL                  = 80500009;
  public static final long pArgument             = 82800037;

  public static final long pMinValue             = 80010047;
  public static final long pMaxValue             = 80010048;
  public static final long pRange                = 80010049;
  public static final long pConstraintType       = 80500040;
  public static final long pCardinalityValue     = 80100050;

  public static final long pBufferPoolType = 80600024;
  public static final long pCompressType = 80600015;
  public static final long pFreelists = 80600022;
  public static final long pFreelistGroups = 80600023;
  public static final long pInitialSize = 80600016;
  public static final long pInitialTransactions = 80600013;
  public static final long pLoggingType = 80600014;
  public static final long pMaxExtents = 80600021;
  public static final long pMaxExtentsType = 80600020;
  public static final long pMinExtents = 80600019;
  public static final long pNextSize = 80600017;
  public static final long pPercentFree = 80600011;
  public static final long pPercentIncrease = 80600018;
  public static final long pPercentUsed = 80600012;
  public static final long pStorageType = 80600009;
  public static final long pTablespaceRef = 80600010;
  public static final long pHashPartitionType = 80600049;
  public static final long pHashPartitionQuantity = 80600052;
  public static final long pTablespaceOrderArrayRefs = 80600057;
  public static final long pBlockSize = 80600062;
  public static final long pMaxTransactions = 80600060;

  public static final long pDataFileOrderRefs = 80600075;
  public static final long pExtentManagementLocalType = 80600092;
  public static final long pExtentManagementType = 80600065;
  public static final long pFlashbackType = 80600070;
  public static final long pIsForceLogging = 80600095;
  public static final long pOnlineState = 80600067;
  public static final long pReadOnlyState = 80600068;
  public static final long pRetentionGuarantee = 80600079;
  public static final long pSegmentManagementType = 80600066;
  public static final long pStorageFileType = 80600069;
  public static final long pTablespaceGroup = 80600074;
  public static final long pTablespaceType = 80600064;
  public static final long pUniformSize = 80600073;
  public static final long pFileSize = 80600076;
  public static final long pIsAutoExtend = 80600077;
  public static final long pIsReuse = 80600078;
  public static final long pMinExtentSize = 80600072;
  public static final long pMaxExtentSize = 80600109;
  public static final long pKeyGroupRef = 80600113;
  public static final long pIntervalExpression = 80600111;
  public static final long pGenerateAsConstraint = 80600116;
  public static final long pConstraintName = 80600118;

  public static final long pStartingValue = 80500066;
  public static final long pIsNullsLast = 80800001;
  public static final long pDurationType = 80800005;
  public static final long pEndingValue = 80800006;
  public static final long pExcludeEndingValue = 80800008;
  public static final long pExcludeStartingValue = 80800007;
  public static final long pIndexTablespaceRef = 80800003;
  public static final long pLongTablespaceRef = 80800004;
  public static final long pPageSize = 80800018;
  public static final long pExtentSize = 80800019;
  public static final long pPrefetchSize = 80800020;
  public static final long pIsUseFileSystemCaching = 80800021;
  public static final long pIsRecoverDroppedTable = 80800022;
  public static final long pOverhead = 80800023;
  public static final long pTransferRate = 80800024;
  public static final long pTablespaceDB2Type = 80800025;
  public static final long pTablespaceDB2ManagementType = 80800026;

  // missing from client, maybe not used at all
  public static final long pIsOpen               = 80100000;
  public static final long pCoverageRate         = 80300063;
  public static final long pCoverageCount        = 80300064;
  public static final long pFieldRef             = 80300065;
  public static final long pDataSources          = 80010017;
  public static final long pTagType              = 80010020;
  //public static final long pReferences           = 80010222; // deprecated
  public static final long pEntityName           = 82000014;
  public static final long pSQLStatement         = 82000013;
  public static final long pEntityRef            = 82000012;
  public static final long pModelSourceRef       = 82000011;
  public static final long pModelRef             = 82000010;
  public static final long pTransformRef         = 80010024;
  public static final long pColumnOrderArrayRefs = 80100007;
  public static final long pTagState             = 80010050;
  public static final long pChName               = 80010058;
  public static final long pEnName               = 80010059;
  public static final long pAbbrName             = 80010060;
  public static final long pTagCode              = 80010061;
  public static final long pStartOrientation     = 80500055;
  public static final long pEndOrientation       = 80500056;
  public static final long pDataStandardId       = 80010067;
  public static final long pNameStandardId       = 80010082;
  public static final long pIsPrivate            = 80010089;
  public static final long pLastSyncTime         = 80010096;
  public static final long pOrderNumber          = 80010108;
  public static final long pCreateTimestamp      = 80010113;
  public static final long pTargetSystem         = 80500071;
  public static final long pDisplayLevel         = 80500091;

  public static final long pTableNameCase        = 80500102;
  public static final long pTableNamePostfix     = 80500104;
  public static final long pTableNamePrefix      = 80500103;
  public static final long pTableNameMaxLength   = 80500105;
  public static final long pColumnNameCase       = 80500106;
  public static final long pColumnNamePrefix     = 80500107;
  public static final long pColumnNamePostfix    = 80500108;
  public static final long pColumnNameMaxLength  = 80500109;
  public static final long pIndexNameCase        = 80500110;
  public static final long pIndexNameMaxLength   = 80500111;
  public static final long pNamingSeperator      = 80500112;
  public static final long pIsUsingRealTimeTranslate = 80500113;
  public static final long pIsTableTranslateEnabled = 80500114;
  public static final long pIsColumnTranslateEnabled = 80500115;
  public static final long pIsIndexTranslateEnabled = 80500116;

  public static final long pIsDropped = 80010153;

  public static final long pTablespaceContainerType = 80800047;
  public static final long pMacro = 80010138;
  public static final long pIsLogicalOnly = 80100052;
  public static final long pIsAutoSizing = 80100056;
  public static final long pIsPhysicalOnly = 80010141;
  public static final long pDatabaseBinding = 80010145;
  public static final long pDesignPattern = 80010147;
  public static final long pDesignPatternTableRole = 80010148;
  public static final long pDesignPatternColumnRole = 80010149;

  public static final long pTableGroups = 80010158;
  public static final long pModelSourcePath = 80010160;
  public static final long pModelSourceType = 80010309;

  public static final long pDoNotGenerate = 80010163;
  public static final long pShowLabel = 80010165;

  public static final long pParallelDegree = 80600128;
  public static final long pIsOnline = 80600127;
  public static final long pIsLocalPartitionedIndex = 80600131;

  public static final long pDefaultAttributes = 80010167;
  public static final long pAutoCreateAttrsOnTable = 80010170;
  public static final long pIdentityMaxValue = 80600133;
  public static final long pIdentityMinValue = 80600134;
  public static final long pIdentityIncrementBy = 80600135;
  public static final long pIsIdentityCycle = 80600136;
  public static final long pIsIdentityOrder = 80600137;
  public static final long pIdentityCacheValue = 80600138;

  public static final long pHeaderHeight = 80010174;
  public static final long pPKDefaultMacro = 80010175;
  public static final long pUKDefaultMacro = 80010176;
  public static final long pFKDefaultMacro = 80010177;
  public static final long pNUKDefaultMacro = 80010178;

  public static final long pIsDomainModelCompatible = 80010183;
  public static final long pReturnValue = 80010189;
  public static final long pRelationshipUmlType = 80010197;
  public static final long pDistributeByType = 80500145;

  public static final long pAccessModifier = 83500002;
  public static final long pClassConceptName = 80010200;
  public static final long pAggregationChName = 80010201;
  public static final long pValueObjectDomain = 80010202;
  public static final long pIsCascade = 80010203;
  public static final long pIsUdpShowOnDiagram = 80010204;
  public static final long pShowUdpOnDiagram = 80010205;
  public static final long pUmlTableRole = 83500005;

  public static final long pCompress = 80500147;
  public static final long pOrientationType = 80500149;
  public static final long pIndexUsingMethod = 80500152;
  public static final long pAttributeRoleType = 80010213;

  // style theme
  public static final long pAttributeBackgroudColor = 80010234;
  public static final long pAttributeTextColor = 80010233;
  public static final long pAttributeTextFont = 80010232;
  public static final long pCommentBackgroundColor = 80010248;
  public static final long pCommentBorderColor = 80010249;
  public static final long pCommentBorderWidth = 80010250;
  public static final long pCommentShadowColor = 80010269;
  public static final long pCommentShadowSize = 80010268;
  public static final long pCommentTextColor = 80010253;
  public static final long pCommentTextFont = 80010252;
  public static final long pDiagramBackgroundColor = 80010260;
  //public static final long pDiagramUseIcons = 80010276;
  public static final long pDiscoveredRelationshipColor = 80010242;
  public static final long pEntityBodyBackgroundColor = 80010215;
  public static final long pEntityBorderColor = 80010216;
  public static final long pEntityBorderWidth = 80010217;
  public static final long pEntityHeaderBackgroundColor = 80010219;
  public static final long pEntityHeaderGradientStyle = 80010222;
  public static final long pEntityHeaderSelectedColor = 80010220;
  public static final long pEntityHeaderTextAlignment = 80010262;
  public static final long pEntityHeaderTextColor = 80010266;
  public static final long pEntityHeaderTextFont = 80010264;
  public static final long pEntityRoundingSize = 80010221;
  public static final long pEntityShadowColor = 80010271;
  public static final long pEntityShadowSize = 80010270;
  public static final long pIsCommentBorderDashed = 80010251;
  public static final long pIsEntityBorderDashed = 80010218;
  public static final long pRelationshipLineColor = 80010238;
  public static final long pRelationshipLineWidth = 80010241;
  public static final long pRelationshipTextColor = 80010239;
  public static final long pRelationshipTextFont = 80010240;
  public static final long pFigureBackgroundColor = 80010279;
  public static final long pFigureBorderColor = 80010280;
  public static final long pFigureBorderWidth = 80010281;
  public static final long pStyleThemeRef = 80010285;
  public static final long pFigureRoundingSize = 80010293;
  public static final long pIsFigureBorderDashed = 80010292;

  public static final long pIsImplicitlyHidden = 80800062;

  public static final long pDisplayDataType = 80010296;
  public static final long pDisplayPhysicalName = 80010300;
  public static final long pDisplayLogicalName = 80010297;
  public static final long pCompostedShapesRef = 80010302;

  public static final long pCompression = 82900005;

  public static final long pTableType = 82900011;
  public static final long pTableServerName = 82900012;
  public static final long pStorageLocation = 82900013;
  public static final long pHeader = 82900014;
  public static final long pFileHeader = 82900015;
  public static final long pOutFilenamePrefix = 82900016;
  public static final long pDelimiterBy = 82900017;
  public static final long pQuoteBy = 82900018;
  public static final long pNoEscaping = 82900019;
  public static final long pEncoding = 82900020;
  public static final long pFillMissingFields = 82900021;
  public static final long pIgnoreExtraData = 82900022;
  public static final long pRejectLimit = 82900023;
  public static final long pImportMode = 82900024;
  public static final long pConflictDelimiter = 82900025;
  public static final long pAccessFileType = 82900026;
  public static final long pAutoCreatePipe = 82900027;
  public static final long pFixLength = 82900028;
  public static final long pOutFixAlignment = 82900029;
  public static final long pDateFormat = 82900030;
  public static final long pTimeFormat = 82900031;
  public static final long pTimestampFormat = 82900032;
  public static final long pSmalldatetimeFormat = 82900033;
  public static final long pCompatibleIllegalChars = 82900034;
  public static final long pChunkSize = 82900055;
  public static final long pFileNames = 82900056;
  public static final long pFolderName = 82900057;
  public static final long pCheckEncoding = 82900058;
  public static final long pTotalRows = 82900059;
  public static final long pAccessTableName = 82900060;
  public static final long pAccessSchemaName = 82900061;
  public static final long pPackageBody = 82800025L;

  public static final long pCodeReferenceType = 80100090;
  public static final long pCustomziedCode = 80100091;
  public static final long pLongTablespaceOrderArrayRefs = 80800065;

  public static final long pTarget = 84300002;
  public static final long pInclusions = 84300003;
  public static final long pExclusions = 84300004;
  public static final long pArchyObjectRef = 84300013;
  public static final long pArchyObjectName = 84300015;
  public static final long pScope = 84300017;

  public static final long pDataStandardRefVersion = 80100094;
  public static final long pIsGlobal = 84000007;
  public static final long pTblProperties = 81300065;

  public static final long pColVersion = 82900084;
  public static final long pEnableDelta = 82900086;
  public static final long pGaussATableGroup = 82900088;

  public static final long pParentKeyMemberFilter = 80020015;

  public static final long pBusinessRule = 84700003;
  public static final long pDataFormat = 84700002;
  public static final long pCreateTableAsSubQuery = 80600192;
  public static final long pCreateTableAsHeader = 80600194;

  public static final long pTableBuType = 84700009;
  public static final long pExplanation = 84700008;
  public static final long pAssociatedSource = 84700016;
  public static final long pIsAssociated = 84700019;
  public static final long pAssociationMappingType = 84700020;
  public static final long pAssociationProcessType = 84700021;

  public static final long pIsCycle = 80600155;
  public static final long pIsOrder = 80600156;
  public static final long pIsKeep =  80600157;
  public static final long pIsScale = 80600158;
  public static final long pIsShard = 80600159;
  public static final long pIsSession = 80600161;
  public static final long pIsShardExtend = 80600173;
  public static final long pIsScaleExtend = 80600174;

  public static final long pDatatypeMappings = 80100098;
  public static final long pIsNeedBusinessGlossary = 80010314;

  public static final long pMergeSource = 80000201;
  public static final long pPartitionElementDesign = 80600178;
  public static final long pIsDataWarehouse = 80500162;
  public static final long pIsManageDataMapping = 80500164;
  public static final long pDataWarehouseLevel = 80500165;
  public static final long pDataWarehouseModelType = 80500166;
  public static final long pDiableMigratePK = 80500170;
  public static final long pMappingExpression = 80500173;
  public static final long pMappingComment = 80500174;
  public static final long pMappingRefs = 80500177;
  public static final long pEntityTemplates = 80020023;

  public static final long pSynonymTargetName = 80600183;
  public static final long pSynonymTargetObjRef = 80600184;
  public static final long pIsFunctionDefaultValue = 80500210;
  public static final long pGeneratedAlwaysAsExpr = 80500214;
  public static final long pGeneratedAlwaysAsStoreType = 80500215;

  public static final long pIndexColumnPrefixLength = 80500222;

  // businessobject related style theme
  public static final long pFigureTextPosition = 80500212;
  public static final long pFigureTextFont = 80500219;
  public static final long pFigureTextColor = 80500218;
  public static final long pBOBackgroundColor = 80500225;
  public static final long pBOBorderColor = 80500226;
  public static final long pIsBOBorderDashed = 80500227;
  public static final long pBOBorderWidth = 80500228;
  public static final long pBORoundingSize = 80500229;
  public static final long pBOTextColor = 80500230;
  public static final long pBOTextFont = 80500231;
  public static final long pBOTextAlignment = 80500232;

  public static final long pIdRelationshipLineColor = 80020042;
  public static final long pIdRelationshipLineWidth = 80020043;
  public static final long pNonIdRelationshipLineColor = 80020044;
  public static final long pNonIdRelationshipLineWidth = 80020045;
  public static final long pVirtualRelationshipLineColor = 80020046;
  public static final long pVirtualRelationshipLineWidth = 80020047;
  public static final long pManyToManyRelationshipLineColor = 80020048;
  public static final long pManyToManyRelationshipLineWidth = 80020049;
  public static final long pSubtypeRelationshipLineColor = 80020050;
  public static final long pSubtypeRelationshipLineWidth = 80020051;
  public static final long pViewRelationshipLineColor = 80020052;
  public static final long pViewRelationshipLineWidth = 80020053;
  public static final long pVirtualRelationshipLineDashPattern = 80020054;

  public static final long pAssociatedObject = 80100105;
  public static final long pCrudType = 80100106;

  public static final long pRullUp = 85100002;
  public static final long pDorisKeyType = 85100004;
  public static final long pAggregationType = 85100006;

  // Object Ids
  public static final long oModelMart = 80000000;
  public static final long oEntity = 80000004;
  public static final long oAttribute = 80000005;
  public static final long oDiagram = 80000006;
  public static final long oRelationship = 80000007;
  public static final long oShape = 80000008;
  public static final long oConnection = 80000009;
  public static final long oComment = 80000027;
  public static final long oKeyGroup = 80000093;
  public static final long oKeyGroupMember = 80500001;
  public static final long oDatabase = 80300035;
  public static final long oShard = 80300039;
  public static final long oTag = 80010000;
  public static final long oModelSource = 80010001;
  public static final long oTagged = 80010011;
  public static final long oSchema = 80700001;
  public static final long oSchedule = 80010025;
  public static final long oView = 80500008;
  public static final long oStoredProcedure = 80010118L;
  public static final long oFunction = 80010119L;
  public static final long oPackage = 82800024L;
  public static final long oMetricTheme = 82800027L;

  public static final long oPartition            = 80500015;
  public static final long oPartitionMember      = 80500018;
  public static final long oPartitionElement     = 80500025;
  public static final long oSubPartition         = 80500043;

  public static final long oCluster              = 81300002;
  public static final long oClusterMember        = 81300003;
  public static final long oSortedByMember       = 81300004;
  public static final long oSerDe                = 81300024;
  public static final long oSerDeElement         = 81300025;

  public static final long oSubtype              = 80100042;

  public static final long oTablespace           = 80600002;
  public static final long oStorage              = 80600006;
  public static final long oSubPartitionElement  = 80600042;
  public static final long oDataFile             = 80600071;

  public static final long oDataStandard         = 80010066;
  public static final long oDataStandardCode     = 80010098;
  public static final long oNameStandard         = 80010080;
  public static final long oNamingOption         = 80500101;

  public static final long oDataReport           = 82800002;
  public static final long oMetrics              = 82800003;
  public static final long oDataStageJob         = 82800004;
  public static final long oDataService          = 82800005;
  public static final long oEtlJob               = 82800006;
  public static final long oEtlStage             = 82800007;
  public static final long oUnstructuredDataAssets  = 82800008;
  public static final long oMetadataObject       = 82800009;
  public static final long oUser                 = 82800010;
  public static final long oAPIAsset             = 82800011;
  public static final long oSystem               = 82800012;
  public static final long oDictObject           = 82800013;
  public static final long oKnowledgeDoc         = 82800014;
  public static final long oLineage              = 82800015;
  public static final long oDataQualityTechnicalRule= 82800016;
  public static final long oDataQualityBusinessRule = 82800017;
  public static final long oOrganization           = 82800018;
  public static final long oDataServiceApi        = 82800019;
  public static final long oSynonym               = 82800020;
  public static final long oMeasurementRequirement = 82800021;
  public static final long oMeasurement           = 82800022;
  public static final long oDataDimension         = 82800023;
  public static final long oDimensionLevel        = 82800031;
  public static final long oModifierType          = 82800032;
  public static final long oTimeModifierType      = 82800033;
  public static final long oModifierValue         = 82800034;
  public static final long oTimeModifierValue     = 82800035;
  public static final long oDataSource            = 82800036;

  public static final long oTablespaceContainerGroup = 80800040;
  public static final long oTablespaceContainer  = 80800041;
  public static final long oShapeMemberStyle     = 80800042;

  public static final long oMemberFunction = 80010186;
  public static final long oParameter = 80010191;
  public static final long oDistributeBy = 80500142;
  public static final long oDistributionElement = 84000002;

  public static final long oKuduHashPartition = 81300067;

  public static final long oStyleTheme = 80010214;
  public static final long oConnectionVirtualLine = 80010287;

  public static final long oCatalog              = 80010076;
  public static final long oBusinessObject = 80100073;

  public static final long oSequence = 80600146;
  public static final long oDbSynonym = 80600179;

  // data warehouse mapping related
  public static final long oDWMapping = 80500180;
  public static final long oDWMappingItem = 80500181;
  public static final long pMappingType = 80020027;
  public static final long pSourceTableName = 80020029;
  public static final long pSourceTableLogicalName = 80020031;
  public static final long pSourceModelName = 80020033;

  public static final long pDWLayer = 80020075;
  public static final long pDWSubject = 80020076;

  // table group
  public static final long oDbTableGroup = 80500251;
  public static final long pDbTableGroupRef = 80500252;
  public static final long pInvisible = 80500257;

  public static final long pIsRowMovement = 80600121;
  public static final long pOptions = 81300069;

  /**
   * 招商定开需求，需要增加几个属性; dam branch 6.0-cms
   * */
  /** 非结构化对象  */
  public static final long pUnstructuredObjects = 82810007;
  /** topic信息 */
  public static final long pTopicInfo = 82810008;
  /** topic详情 */
  public static final long pTopicDetail = 82810024;
  /** 对象类型 */
  public static final long oObjectType = 82810010;
  /** 对象格式 */
  public static final long oObjectForm = 82810011;
  /** 对象描述 */
  public static final long oObjectDescription = 82810012;
  /** 数据分层 */
  public static final long oDataLevel = 82810033;
  /** topic 表名 */
  public static final long oTableName = 82810029;
  /** topic 字段名 */
  public static final long oColumnName = 82810030;

  public static final long pParentOnUpdate = 80500259;
  public static final long pParentOnDelete = 80500260;

  private static Map<Long, LDMTypeObject> objectmap = null;
  private static Map<String, String> specialDatatypeMap = null;



  static {
    objectmap = new HashMap<Long, LDMTypeObject>();
    objectmap.put(pTypeId, new LDMTypes.LDMTypeObject(LDM_Seed + 1, "TypeId", "System.Int32"));
    objectmap.put(pId, new LDMTypes.LDMTypeObject(LDM_Seed + 2, "Id", "System.Int32"));
    objectmap.put(pAutoId, new LDMTypes.LDMTypeObject(pAutoId, "AutoId", "System.Int32"));
    objectmap.put(pStartVersion,
        new LDMTypes.LDMTypeObject(pStartVersion, "StartVersion", "System.Int32"));
    objectmap.put(pEndVersion,
        new LDMTypes.LDMTypeObject(pEndVersion, "EndVersion", "System.Int32"));
    objectmap.put(pName, new LDMTypes.LDMTypeObject(LDM_Seed + 3, "Name", "System.String"));
    objectmap.put(pDefinition, new LDMTypeObject(LDM_Seed + 4, "Definition", "System.String"));
    objectmap.put(pValueType, new LDMTypeObject(LDM_Seed + 5, "ValueType", "System.RuntimeType"));
    objectmap.put(pUniqueId, new LDMTypeObject(LDM_Seed + 6, "UniqueId", "System.Guid"));
    objectmap.put(pTypeUniqueId, new LDMTypeObject(LDM_Seed + 7, "TypeUniqueId", "System.Guid"));
    objectmap.put(pClassName, new LDMTypeObject(LDM_Seed + 8, "ClassName", "System.String"));
    objectmap.put(pEnum, new LDMTypeObject(LDM_Seed + 9, "Enum", "System.String"));
    objectmap.put(pOwnerRef, new LDMTypeObject(LDM_Seed + 10, "OwnerRef", "System.Int32", true, false));
    objectmap.put(pOwneeRef, new LDMTypeObject(LDM_Seed + 11, "OwneeRef", "System.Int32", true, false));
    objectmap.put(pIsVisible, new LDMTypeObject(LDM_Seed + 12, "IsVisible", "System.Boolean"));
    objectmap.put(pClassType, new LDMTypeObject(LDM_Seed + 13, "ClassType", "System.String"));
    objectmap.put(pIsReference,
        new LDMTypeObject(LDM_Seed + 14, "IsReference", "System.Boolean"));
    objectmap.put(pFriendlyName,
        new LDMTypeObject(LDM_Seed + 15, "FriendlyName", "System.String"));
    objectmap.put(pIsDBPhysical,
        new LDMTypeObject(LDM_Seed + 16, "IsDBPhysical", "System.Boolean"));

    objectmap.put(pIsArray, new LDMTypeObject(pIsArray, "IsArray", "System.Boolean"));
    objectmap.put(pIsUDP, new LDMTypeObject(pIsUDP, "IsUDP", "System.Boolean"));
    objectmap.put(pDefaultUDPValue, new LDMTypeObject(pDefaultUDPValue, "DefaultUDPValue", "System.String"));
    objectmap.put(pUDPFingerPrint, new LDMTypeObject(pUDPFingerPrint, "UDPFingerPrint", "System.String"));
    objectmap.put(pIsDynamicOnEditor, new LDMTypeObject(pIsDynamicOnEditor, "IsDynamicOnEditor", "System.Boolean"));
    objectmap.put(pUDPOrder, new LDMTypeObject(pUDPOrder, "UDPOrder", "System.Int32"));
    objectmap.put(pIsRequired, new LDMTypeObject(pIsRequired, "IsRequired", "System.Boolean"));
    objectmap.put(pPageName, new LDMTypeObject(pPageName, "PageName", "System.String"));
    objectmap.put(pExtendedEnumStruct, new LDMTypeObject(pExtendedEnumStruct, "ExtendedEnumStruct", "System.String"));
    objectmap.put(pExtendedEnumParentRef, new LDMTypeObject(pExtendedEnumParentRef, "ExtendedEnumParentRef", "System.Int32"));
    objectmap.put(pExtendedEnumMultiple, new LDMTypeObject(pExtendedEnumMultiple, "ExtendedEnumMultiple", "System.Boolean"));
    objectmap.put(pUdpValueType, new LDMTypeObject(pUdpValueType, "UdpValueType", "System.String"));
    objectmap.put(pUdpDbType, new LDMTypeObject(pUdpDbType, "UdpDbType", "System.String"));

    objectmap.put(pDoNotInherit, new LDMTypeObject(pDoNotInherit, "DoNotInherit", "System.Boolean"));
    objectmap.put(pIsLongText, new LDMTypeObject(pIsLongText, "IsLongText", "System.Boolean"));
    objectmap.put(pObjTypeRef, new LDMTypeObject(pObjTypeRef, "ObjTypeRef", "System.String"));
    objectmap.put(pObjUsageType, new LDMTypeObject(pObjUsageType, "pObjUsageType", "System.String"));


    objectmap.put(pOrigin, new LDMTypeObject(80000001, "FilePath", "System.String"));
    objectmap.put(pDataType, new LDMTypeObject(80000002, "DataType", "System.String"));
    objectmap.put(pLocation, new LDMTypeObject(80000003, "Location", "System.Drawing.Point"));
    objectmap.put(pDataStore, new LDMTypeObject(80000020, "DataStore", "Datablau.LDM.DataStore_e"));
    objectmap.put(pLabel, new LDMTypeObject(80000021, "Label", "System.String"));
    objectmap.put(pText, new LDMTypeObject(80000022, "Text", "System.String"));
    objectmap.put(pIsCollapsed, new LDMTypeObject(80000023, "IsCollapsed", "System.Boolean"));
    objectmap.put(pWidth, new LDMTypeObject(80000024, "Width", "System.Int32"));
    objectmap.put(pHeight, new LDMTypeObject(80000025, "Height", "System.Int32"));
    objectmap.put(pShapeSize, new LDMTypeObject(80000026, "ShapeSize", "System.Drawing.Size"));
    objectmap.put(pIsExpanded, new LDMTypeObject(80000029, "IsExpanded", "System.Boolean"));
    objectmap.put(pTargetDB, new LDMTypeObject(80000031, "TargetDB", "System.String"));
    objectmap.put(pBendpoints, new LDMTypeObject(80500057, "BendPoints", "System.String"));
    objectmap.put(pStyleBackColor, new LDMTypeObject(80500087, "StyleBackColor", "System.String"));
    objectmap.put(pStyleBackColor2, new LDMTypeObject(80500088, "StyleBackColor2", "System.String"));
    objectmap.put(pStyleTextColor, new LDMTypeObject(80500090, "StyleTextColor", "System.String"));
    objectmap.put(pModelGroup, new LDMTypeObject(80000033, "ModelGroup", "System.String"));
    objectmap.put(pParentEntityRef,
        new LDMTypeObject(80000052, "ParentEntityRef", "System.Int32", true, false));
    objectmap.put(pChildEntityRef, new LDMTypeObject(80000053, "ChildEntityRef", "System.Int32", true, false));
    objectmap.put(pParentKeyRef, new LDMTypeObject(80000054, "ParentKeyRef", "System.Int32", true, false));
    objectmap.put(pChildKeyRef, new LDMTypeObject(80000055, "ChildKeyRef", "System.Int32", true, false));
    objectmap.put(pParentShapeRef, new LDMTypeObject(80000060, "ParentShapeRef", "System.Int32", true, false));
    objectmap.put(pChildShapeRef, new LDMTypeObject(80000061, "ChildShapeRef", "System.Int32", true, false));
    objectmap.put(pNotationType,
        new LDMTypeObject(80000069, "NotationType", "Datablau.LDM.NotationType"));
    objectmap.put(pRelationalType,
        new LDMTypeObject(80000070, "RelationalType", "Datablau.LDM.RelationalType"));
    objectmap.put(pStartCardinality,
        new LDMTypeObject(80000071, "StartCardinality", "Datablau.LDM.CardinalityType"));
    objectmap.put(pEndCardinality,
        new LDMTypeObject(80000072, "EndCardinality", "Datablau.LDM.CardinalityType"));
    objectmap.put(pDirection, new LDMTypeObject(80000073, "Direction", "Datablau.LDM.Direction"));
    objectmap.put(pStartRole, new LDMTypeObject(80000074, "StartRole", "System.String"));
    objectmap.put(pEndRole, new LDMTypeObject(80000075, "EndRole", "System.String"));
    objectmap.put(pStartMultiplicity,
        new LDMTypeObject(80000076, "StartMultiplicity", "System.String"));
    objectmap.put(pEndMultiplicity,
        new LDMTypeObject(80000077, "EndMultiplicity", "System.String"));
    objectmap.put(pArraySize, new LDMTypeObject(80000087, "ArraySize", "System.Int32"));
    objectmap.put(pInfo, new LDMTypeObject(80000089, "SampleValue", "System.String"));
    objectmap.put(pStatistics, new LDMTypeObject(80000091, "Statistics", "System.String"));
    objectmap.put(pRelationshipRef,
        new LDMTypeObject(80000095, "RelationshipRef", "System.Int32", true, false));
    objectmap.put(pKeyGroupMemberRefs,
        new LDMTypeObject(80000096, "KeyGroupMemberRefs", "System.String", true, true));
    objectmap.put(pKeyGroupType,
        new LDMTypeObject(80000097, "KeyGroupType", "Datablau.LDM.KeyGroupType"));
    objectmap.put(pAuthor, new LDMTypeObject(80000104, "Author", "System.String"));
    objectmap.put(pIsSparse, new LDMTypeObject(80300000, "IsSparse", "System.Boolean"));
    objectmap.put(pPartialFilter, new LDMTypeObject(80300001, "PartialFilter", "System.String"));
    objectmap.put(pExpireAfterSeconds,
        new LDMTypeObject(80300002, "ExpireAfterSeconds", "System.Int32"));
    objectmap.put(pDefaultLanguage,
        new LDMTypeObject(80300003, "DefaultLanguage", "System.String"));
    objectmap.put(pWeights, new LDMTypeObject(80300005, "Weights", "System.String"));
    objectmap.put(pIsUnique, new LDMTypeObject(80300006, "IsUnique", "System.Boolean"));
    objectmap.put(pLanguageOverride,
        new LDMTypeObject(80300007, "LanguageOverride", "System.String"));
    objectmap.put(pWildcardTextIndex,
        new LDMTypeObject(80300015, "WildcardTextIndex", "System.Boolean"));
    objectmap.put(pLowerBound, new LDMTypeObject(80300017, "LowerBound", "System.Double"));
    objectmap.put(pUpperBound, new LDMTypeObject(80300018, "UpperBound", "System.Double"));
    objectmap.put(pBitPrecision, new LDMTypeObject(80300019, "BitPrecision", "System.Double"));
    objectmap.put(p2DSphereVersion,
        new LDMTypeObject(80300020, "2DSphereVersion", "System.String"));
    objectmap.put(pBucketSize, new LDMTypeObject(80300021, "BucketSize", "System.Int32"));
    objectmap.put(pCapped, new LDMTypeObject(80300027, "Capped", "System.Boolean"));
    objectmap.put(pMaxSize, new LDMTypeObject(80300029, "MaxSize", "System.Int32"));
    objectmap.put(pMaxDocs, new LDMTypeObject(80300030, "MaxDocs", "System.Int32"));
    objectmap.put(pDatabaseRef, new LDMTypeObject(80300047, "DatabaseRef", "System.Int32", true, false));
    objectmap.put(pShardIndexRef, new LDMTypeObject(80300049, "ShardIndexRef", "System.Int32", true, false));
    objectmap.put(pShardInfo, new LDMTypeObject(80300051, "ShardInfo", "System.String"));
    objectmap.put(pPatternInfo, new LDMTypeObject(80300053, "PatternInfo", "System.String"));
    objectmap.put(pTagUniqueRef, new LDMTypeObject(80010005, "TagUniqueRef", "System.String"));
    objectmap.put(pDataSourceId, new LDMTypeObject(80100002, "DataSourceId", "System.Int32"));
    objectmap.put(pDataPrecision,
        new LDMTypeObject(pDataPrecision, "DataPrecision", "System.Int32"));
    objectmap.put(pRowCount, new LDMTypeObject(80400001, "RowCount", "System.Int32"));
    objectmap.put(pLastUpdateTime,
        new LDMTypeObject(80400003, "LastUpdateTime", "System.DateTime"));
    objectmap.put(pSchemaRef, new LDMTypeObject(80700005, "SchemaRef", "System.Int32", true, false));
    objectmap.put(pSchemaName, new LDMTypeObject(82800030, "SchemaName", "System.String"));
    objectmap.put(pTags, new LDMTypeObject(80100021, "Tags", "System.String"));
    objectmap.put(pOriginal, new LDMTypeObject(80100019, "Original", "System.String"));
    objectmap.put(pObjectArray, new LDMTypeObject(80100004, "ObjectArray", "System.String", true, true));
    objectmap.put(pLogicalName, new LDMTypeObject(80100005, "LogicalName", "System.String"));
    objectmap.put(pPhysicalName, new LDMTypeObject(80100006, "PhysicalName", "System.String"));
    objectmap.put(pColumnOrderArray,
        new LDMTypeObject(80100007, "ColumnOrderArray", "System.String", true, true));
    objectmap.put(pErwinTargetDB, new LDMTypeObject(82000001, "ErwinTargetDB", "System.String"));
    objectmap.put(pDuration, new LDMTypeObject(80010028, "Duration", "System.Double"));
    objectmap.put(pUserTags, new LDMTypeObject(80400005, "UserTags", "System.String"));
    objectmap.put(pOrdinal, new LDMTypeObject(80400006, "Ordinal", "System.Int32"));
    objectmap.put(pDataScale, new LDMTypeObject(pDataScale, "DataScale", "System.Int32"));
    objectmap.put(pIsNotNull, new LDMTypeObject(pIsNotNull, "IsNotNull", "System.Boolean"));
    objectmap.put(pIsAutoIncrement,
        new LDMTypeObject(pIsAutoIncrement, "IsAutoIncrement", "System.Boolean"));
    objectmap.put(pIsAutoRandom,
            new LDMTypeObject(pIsAutoRandom, "IsAutoRandom", "System.Boolean"));
    objectmap.put(pAutoRandomSharding,
            new LDMTypeObject(pAutoRandomSharding, "AutoRandomSharding", "System.Int32"));
    objectmap.put(pAutoRandomRange,
            new LDMTypeObject(pAutoRandomRange, "AutoRandomRange", "System.Int32"));
    objectmap.put(pIsClustered,
            new LDMTypeObject(pIsClustered, "IsClustered", "System.Boolean"));
    objectmap.put(pDefaultValue,
        new LDMTypeObject(pDefaultValue, "DefaultValue", "System.String"));
    objectmap.put(pLogicalDataType,
        new LDMTypeObject(pLogicalDataType, "LogicalDataType", "System.String"));
    objectmap.put(pActionType, new LDMTypeObject(pActionType, "ActionType", "System.Int32"));
    objectmap.put(pAttributeRef, new LDMTypeObject(pAttributeRef, "AttributeRef", "System.Int32", true, false));
    objectmap.put(pOrderType, new LDMTypeObject(pOrderType, "OrderType", "Datablau.LDM.IndexType"));
    objectmap.put(pEngine, new LDMTypeObject(80500068, "Engine", "System.String"));
    objectmap.put(pCharacterSet, new LDMTypeObject(80500069, "CharacterSet", "System.String"));
    objectmap.put(pCollation, new LDMTypeObject(80500070, "Collation", "System.String"));
    objectmap.put(pSubTypeRef, new LDMTypeObject(80100044, "SubTypeRef", "System.Int32", true, false));
    objectmap.put(pSubtypeType, new LDMTypeObject(80100047, "SubtypeType", "Datablau.LDM.SubtypeType"));

    objectmap.put(pPartitionType, new LDMTypeObject(pPartitionType, "PartitionType", "Datablau.LDM.PartitionType"));
    objectmap.put(pPartitionsNumber, new LDMTypeObject(pPartitionsNumber, "PartitionsNumber", "System.Int32"));
    objectmap.put(pPartitionMemberOrderRefs, new LDMTypeObject(pPartitionMemberOrderRefs, "PartitionMemberOrderRefs", "System.String", true, true));
    objectmap.put(pPartitionMemberExpression, new LDMTypeObject(pPartitionMemberExpression, "PartitionMemberExpression", "System.String"));
    objectmap.put(pPartitionElementOrderRefs, new LDMTypeObject(pPartitionElementOrderRefs, "PartitionElementOrderRefs", "System.String", true, true));

    objectmap.put(pClusterMemberRefs, new LDMTypeObject(pClusterMemberRefs, "ClusterMemberRefs", "System.String", true, true));
    objectmap.put(pSortedByMemberRefs, new LDMTypeObject(pSortedByMemberRefs, "SortedByMemberRefs", "System.String", true, true));
    objectmap.put(pRowFormat, new LDMTypeObject(pRowFormat, "RowFormat", "Datablau.LDM.RowFormatType"));
    objectmap.put(pFieldsTerminatedBy, new LDMTypeObject(pFieldsTerminatedBy, "FieldsTerminatedBy", "System.String"));
    objectmap.put(pEscapedBy, new LDMTypeObject(pEscapedBy, "EscapedBy", "System.String"));
    objectmap.put(pCollectionItemsTerminatedBy, new LDMTypeObject(pCollectionItemsTerminatedBy, "CollectionItemsTerminatedBy", "System.String"));
    objectmap.put(pMapKeysTerminatedBy, new LDMTypeObject(pMapKeysTerminatedBy, "MapKeysTerminatedBy", "System.String"));
    objectmap.put(pLinesTerminatedBy, new LDMTypeObject(pLinesTerminatedBy, "LinesTerminatedBy", "System.String"));
    objectmap.put(pNullDefinedAs, new LDMTypeObject(pNullDefinedAs, "NullDefinedAs", "System.String"));
    objectmap.put(pCommonMemberRefs, new LDMTypeObject(pCommonMemberRefs, "CommonMemberRefs", "System.String", true, true));
    objectmap.put(pStoredAs, new LDMTypeObject(pStoredAs, "StoredAs", "System.String"));
    objectmap.put(pStoredBy, new LDMTypeObject(pStoredBy, "StoredBy", "System.String"));
    objectmap.put(pStoreType, new LDMTypeObject(pStoreType, "StoreType", "Datablau.LDM.StoreType"));
    objectmap.put(pPath, new LDMTypeObject(pPath, "Path", "System.String"));
    objectmap.put(pDataStandardCode, new LDMTypeObject(pDataStandardCode, "DataStandardCode", "System.String"));
    objectmap.put(pDataStandardRef, new LDMTypeObject(pDataStandardRef, "DataStandardRef", "System.String"));
    objectmap.put(pReference, new LDMTypeObject(pReference, "Reference", "System.Int32", true, false));
    objectmap.put(pSQL, new LDMTypeObject(pSQL, "SQL", "System.String"));
    objectmap.put(pArgument, new LDMTypeObject(pArgument, "Argument", "System.String"));

    objectmap.put(pMinValue, new LDMTypeObject(pMinValue, "MinValue", "System.String"));
    objectmap.put(pMaxValue, new LDMTypeObject(pMaxValue, "MaxValue", "System.String"));
    objectmap.put(pRange, new LDMTypeObject(pRange, "Range", "System.String"));
    objectmap.put(pConstraintType, new LDMTypeObject(pConstraintType, "ConstraintType", "Datablau.LDM.ConstraintType"));
    objectmap.put(pCardinalityValue, new LDMTypeObject(pCardinalityValue, "CardinalityValue", "System.Int32"));
    objectmap.put(pStyleFont, new LDMTypeObject(pStyleFont, "StyleFont", "System.String"));

    objectmap.put(pBufferPoolType, new LDMTypeObject(pBufferPoolType, "BufferPoolType", "Datablau.LDM.BufferPoolType"));
    objectmap.put(pCompressType, new LDMTypeObject(pCompressType, "CompressType", "Datablau.LDM.CompressType"));
    objectmap.put(pFreelists, new LDMTypeObject(pFreelists, "Freelists", "System.Int32"));
    objectmap.put(pFreelistGroups, new LDMTypeObject(pFreelistGroups, "FreelistGroups", "System.Int32"));
    objectmap.put(pInitialSize, new LDMTypeObject(pInitialSize, "InitialSize", "System.String"));
    objectmap.put(pInitialTransactions, new LDMTypeObject(pInitialTransactions, "InitialTransactions", "System.Int32"));
    objectmap.put(pMaxTransactions, new LDMTypeObject(pMaxTransactions, "MaxTransactions", "System.Int32"));
    objectmap.put(pLoggingType, new LDMTypeObject(pLoggingType, "LoggingType", "Datablau.LDM.LoggingType"));
    objectmap.put(pMaxExtents, new LDMTypeObject(pMaxExtents, "MaxExtents", "System.Int32"));
    objectmap.put(pMaxExtentsType, new LDMTypeObject(pMaxExtentsType, "MaxExtentsType", "Datablau.LDM.MaxExtentsType"));
    objectmap.put(pMinExtents, new LDMTypeObject(pMinExtents, "MinExtents", "System.Int32"));
    objectmap.put(pNextSize, new LDMTypeObject(pNextSize, "NextSize", "System.String"));
    objectmap.put(pPercentFree, new LDMTypeObject(pPercentFree, "PercentFree", "System.Int32"));
    objectmap.put(pPercentIncrease, new LDMTypeObject(pPercentIncrease, "PercentIncrease", "System.Int32"));
    objectmap.put(pPercentUsed, new LDMTypeObject(pPercentUsed, "PercentUsed", "System.Int32"));
    objectmap.put(pStorageType, new LDMTypeObject(pStorageType, "StorageType", "Datablau.LDM.StorageType"));
    objectmap.put(pTablespaceRef, new LDMTypeObject(pTablespaceRef, "TablespaceRef", "System.Int32", true, false));
    objectmap.put(pHashPartitionType, new LDMTypeObject(pHashPartitionType, "HashPartitionType", "Datablau.LDM.HashPartitionType"));
    objectmap.put(pHashPartitionQuantity, new LDMTypeObject(pHashPartitionQuantity, "HashPartitionQuantity", "System.Int32"));
    objectmap.put(pTablespaceOrderArrayRefs, new LDMTypeObject(pTablespaceOrderArrayRefs, "TablespaceOrderArrayRefs", "System.String", true, true));
    objectmap.put(pBlockSize, new LDMTypeObject(pBlockSize, "BlockSize", "System.String"));

    objectmap.put(pDataFileOrderRefs, new LDMTypeObject(pDataFileOrderRefs, "DataFileOrderRefs", "System.String", true, true));
    objectmap.put(pExtentManagementLocalType, new LDMTypeObject(pExtentManagementLocalType, "ExtentManagementLocalType", "Datablau.LDM.ExtentManagementLocalType"));
    objectmap.put(pExtentManagementType, new LDMTypeObject(pExtentManagementType, "ExtentManagementType", "Datablau.LDM.ExtentManagementType"));
    objectmap.put(pFlashbackType, new LDMTypeObject(pFlashbackType, "FlashbackType", "Datablau.LDM.FlashbackType"));
    objectmap.put(pIsForceLogging, new LDMTypeObject(pIsForceLogging, "IsForceLogging", "System.Boolean"));
    objectmap.put(pOnlineState, new LDMTypeObject(pOnlineState, "OnlineState", "Datablau.LDM.OnlineState"));
    objectmap.put(pReadOnlyState, new LDMTypeObject(pReadOnlyState, "ReadOnlyState", "Datablau.LDM.ReadOnlyState"));
    objectmap.put(pRetentionGuarantee, new LDMTypeObject(pRetentionGuarantee, "RetentionGuarantee", "Datablau.LDM.RetentionGuarantee"));
    objectmap.put(pSegmentManagementType, new LDMTypeObject(pSegmentManagementType, "SegmentManagementType", "Datablau.LDM.SegmentManagementType"));
    objectmap.put(pStorageFileType, new LDMTypeObject(pStorageFileType, "StorageFileType", "Datablau.LDM.StorageFileType"));
    objectmap.put(pTablespaceGroup, new LDMTypeObject(pTablespaceGroup, "TablespaceGroup", "System.String"));
    objectmap.put(pTablespaceType, new LDMTypeObject(pTablespaceType, "TablespaceType", "Datablau.LDM.TablespaceType"));
    objectmap.put(pUniformSize, new LDMTypeObject(pUniformSize, "UniformSize", "System.String"));
    objectmap.put(pFileSize, new LDMTypeObject(pFileSize, "FileSize", "System.String"));
    objectmap.put(pIsAutoExtend, new LDMTypeObject(pIsAutoExtend, "IsAutoExtend", "System.Boolean"));
    objectmap.put(pIsReuse, new LDMTypeObject(pIsReuse, "IsReuse", "System.Boolean"));
    objectmap.put(pMinExtentSize, new LDMTypeObject(pMinExtentSize, "MinExtentSize", "System.String"));
    objectmap.put(pMaxExtentSize, new LDMTypeObject(pMaxExtentSize, "MaxExtentSize", "System.String"));
    objectmap.put(pKeyGroupRef, new LDMTypeObject(pKeyGroupRef, "KeyGroupRef", "System.Int32", true, false));
    objectmap.put(pIntervalExpression, new LDMTypeObject(pIntervalExpression, "IntervalExpression", "System.String"));
    objectmap.put(pGenerateAsConstraint, new LDMTypeObject(pGenerateAsConstraint, "GenerateAsConstraint", "System.Boolean"));
    objectmap.put(pConstraintName, new LDMTypeObject(pConstraintName, "ConstraintName", "System.String"));

    objectmap.put(pIsNullsLast, new LDMTypeObject(pIsNullsLast, "IsNullsLast", "System.Boolean"));
    objectmap.put(pDurationType, new LDMTypeObject(pDurationType, "DurationType", "Datablau.LDM.DurationType"));
    objectmap.put(pStartingValue, new LDMTypeObject(pStartingValue, "StartingValue", "System.String"));
    objectmap.put(pEndingValue, new LDMTypeObject(pEndingValue, "EndingValue", "System.String"));
    objectmap.put(pExcludeEndingValue, new LDMTypeObject(pExcludeEndingValue, "ExcludeEndingValue", "System.Boolean"));
    objectmap.put(pExcludeStartingValue, new LDMTypeObject(pExcludeStartingValue, "ExcludeStartingValue", "System.Boolean"));
    objectmap.put(pIndexTablespaceRef, new LDMTypeObject(pIndexTablespaceRef, "IndexTablespaceRef", "System.Int32", true, false));
    objectmap.put(pLongTablespaceRef, new LDMTypeObject(pLongTablespaceRef, "LongTablespaceRef", "System.Int32", true, false));
    objectmap.put(pPageSize, new LDMTypeObject(pPageSize, "PageSize", "System.String"));
    objectmap.put(pTablespaceDB2Type, new LDMTypeObject(pTablespaceDB2Type, "TablespaceDB2Type", "Datablau.LDM.TablespaceDB2Type"));
    objectmap.put(pTablespaceDB2ManagementType, new LDMTypeObject(pTablespaceDB2ManagementType, "TablespaceDB2ManagementType", "Datablau.LDM.TablespaceDB2ManagementType"));
    objectmap.put(pExtentSize, new LDMTypeObject(pExtentSize, "ExtentSize", "System.String"));
    objectmap.put(pPrefetchSize, new LDMTypeObject(pPrefetchSize, "PrefetchSize", "System.String"));
    objectmap.put(pIsUseFileSystemCaching, new LDMTypeObject(pIsUseFileSystemCaching, "IsUseFileSystemCaching", "System.Boolean"));
    objectmap.put(pIsRecoverDroppedTable, new LDMTypeObject(pIsRecoverDroppedTable, "IsRecoverDroppedTable", "System.Boolean"));
    objectmap.put(pOverhead, new LDMTypeObject(pOverhead, "Overhead", "System.String"));
    objectmap.put(pTransferRate, new LDMTypeObject(pTransferRate, "TransferRate", "System.String"));

    objectmap.put(pCompress, new LDMTypeObject(pCompress, "Compress", "System.Boolean"));
    objectmap.put(pOrientationType, new LDMTypeObject(pOrientationType, "OrientationType", "Datablau.LDM.OrientationType"));
    objectmap.put(pIndexUsingMethod, new LDMTypeObject(pIndexUsingMethod, "IndexUsingMethod", "Datablau.LDM.IndexUsingMethod"));
    objectmap.put(pAttributeRoleType, new LDMTypeObject(pAttributeRoleType, "AttributeRoleType", "Datablau.LDM.AttributeRoleType"));

    objectmap.put(pAttributeBackgroudColor, new LDMTypeObject(pAttributeBackgroudColor, "AttributeBackgroudColor", "System.String"));
    objectmap.put(pAttributeTextColor, new LDMTypeObject(pAttributeTextColor, "AttributeTextColor", "System.String"));
    objectmap.put(pAttributeTextFont, new LDMTypeObject(pAttributeTextFont, "AttributeTextFont", "System.String"));
    objectmap.put(pCommentBackgroundColor, new LDMTypeObject(pCommentBackgroundColor, "CommentBackgroundColor", "System.String"));
    objectmap.put(pCommentBorderColor, new LDMTypeObject(pCommentBorderColor, "CommentBorderColor", "System.String"));
    objectmap.put(pCommentBorderWidth, new LDMTypeObject(pCommentBorderWidth, "CommentBorderWidth", "System.Int32"));
    objectmap.put(pCommentShadowColor, new LDMTypeObject(pCommentShadowColor, "CommentShadowColor", "System.String"));
    objectmap.put(pCommentShadowSize, new LDMTypeObject(pCommentShadowSize, "CommentShadowSize", "System.Drawing.Size"));
    objectmap.put(pCommentTextColor, new LDMTypeObject(pCommentTextColor, "CommentTextColor", "System.String"));
    objectmap.put(pCommentTextFont, new LDMTypeObject(pCommentTextFont, "CommentTextFont", "System.String"));
    objectmap.put(pDiagramBackgroundColor, new LDMTypeObject(pDiagramBackgroundColor, "DiagramBackgroundColor", "System.String"));
    objectmap.put(pDiscoveredRelationshipColor, new LDMTypeObject(pDiscoveredRelationshipColor, "DiscoveredRelationshipColor", "System.String"));
    objectmap.put(pEntityBodyBackgroundColor, new LDMTypeObject(pEntityBodyBackgroundColor, "EntityBodyBackgroundColor", "System.String"));
    objectmap.put(pEntityBorderColor, new LDMTypeObject(pEntityBorderColor, "EntityBorderColor", "System.String"));
    objectmap.put(pEntityBorderWidth, new LDMTypeObject(pEntityBorderWidth, "EntityBorderWidth", "System.Int32"));
    objectmap.put(pEntityHeaderBackgroundColor, new LDMTypeObject(pEntityHeaderBackgroundColor, "EntityHeaderBackgroundColor", "System.String"));
    objectmap.put(pEntityHeaderGradientStyle, new LDMTypeObject(pEntityHeaderGradientStyle, "EntityHeaderGradientStyle", "Datablau.LDM.GradientStyle"));
    objectmap.put(pEntityHeaderSelectedColor, new LDMTypeObject(pEntityHeaderSelectedColor, "EntityHeaderSelectedColor", "System.String"));
    objectmap.put(pEntityHeaderTextAlignment, new LDMTypeObject(pEntityHeaderTextAlignment, "EntityHeaderTextAlignment", "System.Drawing.ContentAlignment"));
    objectmap.put(pEntityHeaderTextColor, new LDMTypeObject(pEntityHeaderTextColor, "EntityHeaderTextColor", "System.String"));
    objectmap.put(pEntityHeaderTextFont, new LDMTypeObject(pEntityHeaderTextFont, "EntityHeaderTextFont", "System.String"));
    objectmap.put(pEntityRoundingSize, new LDMTypeObject(pEntityRoundingSize, "EntityRoundingSize", "System.Int32"));
    objectmap.put(pEntityShadowColor, new LDMTypeObject(pEntityShadowColor, "EntityShadowColor", "System.String"));
    objectmap.put(pEntityShadowSize, new LDMTypeObject(pEntityShadowSize, "EntityShadowSize", "System.Drawing.Size"));
    objectmap.put(pIsCommentBorderDashed, new LDMTypeObject(pIsCommentBorderDashed, "IsCommentBorderDashed", "System.Boolean"));
    objectmap.put(pIsEntityBorderDashed, new LDMTypeObject(pIsEntityBorderDashed, "IsEntityBorderDashed", "System.Boolean"));
    objectmap.put(pRelationshipLineColor, new LDMTypeObject(pRelationshipLineColor, "RelationshipLineColor", "System.String"));
    objectmap.put(pRelationshipLineWidth, new LDMTypeObject(pRelationshipLineWidth, "RelationshipLineWidth", "System.Int32"));
    objectmap.put(pRelationshipTextColor, new LDMTypeObject(pRelationshipTextColor, "RelationshipTextColor", "System.String"));
    objectmap.put(pRelationshipTextFont, new LDMTypeObject(pRelationshipTextFont, "RelationshipTextFont", "System.String"));
    objectmap.put(pFigureBackgroundColor, new LDMTypeObject(pFigureBackgroundColor, "FigureBackgroundColor", "System.String"));
    objectmap.put(pFigureBorderColor, new LDMTypeObject(pFigureBorderColor, "FigureBorderColor", "System.String"));
    objectmap.put(pFigureBorderWidth, new LDMTypeObject(pFigureBorderWidth, "FigureBorderWidth", "System.Int32"));
    objectmap.put(pStyleThemeRef, new LDMTypeObject(pStyleThemeRef, "StyleThemeRef", "System.Int32", true, false));
    objectmap.put(pBOBorderColor, new LDMTypeObject(pBOBorderColor,"BOBorderColor", "System.String"));
    objectmap.put(pBOBackgroundColor, new LDMTypeObject(pBOBackgroundColor,"BOBackgroundColor", "System.String"));
    objectmap.put(pBOTextColor, new LDMTypeObject(pBOTextColor,"BOTextColor", "System.String"));
    objectmap.put(pBOTextFont, new LDMTypeObject(pBOTextFont, "BOTextFont", "System.String"));
    objectmap.put(pBORoundingSize, new LDMTypeObject(pBORoundingSize, "BORoundingSize", "System.Drawing.Size"));
    objectmap.put(pBOTextAlignment, new LDMTypeObject(pBOTextAlignment, "BOTextAlignment", "System.Drawing.ContentAlignment"));
    objectmap.put(pBOBorderWidth, new LDMTypeObject(pBOBorderWidth, "BOBorderWidth", "System.Int32"));
    objectmap.put(pIsBOBorderDashed, new LDMTypeObject(pIsBOBorderDashed, "IsBOBorderDashed", "System.Boolean"));
    objectmap.put(pFigureTextColor, new LDMTypeObject(pFigureTextColor,"FigureTextColor", "System.String"));
    objectmap.put(pFigureTextFont, new LDMTypeObject(pFigureTextFont, "FigureTextFont", "System.String"));
    objectmap.put(pFigureTextPosition, new LDMTypeObject(pFigureTextPosition, "FigureTextPosition", "System.String"));
    objectmap.put(pIdRelationshipLineColor, new LDMTypeObject(pIdRelationshipLineColor, "IdRelationshipLineColor", "System.String"));
    objectmap.put(pIdRelationshipLineWidth, new LDMTypeObject(pIdRelationshipLineWidth, "IdRelationshipLineWidth", "System.Int32"));
    objectmap.put(pNonIdRelationshipLineColor, new LDMTypeObject(pNonIdRelationshipLineColor, "NonIdRelationshipLineColor", "System.String"));
    objectmap.put(pNonIdRelationshipLineWidth, new LDMTypeObject(pNonIdRelationshipLineWidth, "NonIdRelationshipLineWidth", "System.Int32"));
    objectmap.put(pVirtualRelationshipLineColor, new LDMTypeObject(pVirtualRelationshipLineColor, "VirtualRelationshipLineColor", "System.String"));
    objectmap.put(pVirtualRelationshipLineWidth, new LDMTypeObject(pVirtualRelationshipLineWidth, "VirtualRelationshipLineWidth", "System.Int32"));
    objectmap.put(pManyToManyRelationshipLineColor, new LDMTypeObject(pManyToManyRelationshipLineColor, "ManyToManyRelationshipLineColor", "System.String"));
    objectmap.put(pManyToManyRelationshipLineWidth, new LDMTypeObject(pManyToManyRelationshipLineWidth, "ManyToManyRelationshipLineWidth", "System.Int32"));
    objectmap.put(pSubtypeRelationshipLineColor, new LDMTypeObject(pSubtypeRelationshipLineColor, "SubtypeRelationshipLineColor", "System.String"));
    objectmap.put(pSubtypeRelationshipLineWidth, new LDMTypeObject(pSubtypeRelationshipLineWidth, "SubtypeRelationshipLineWidth", "System.Int32"));
    objectmap.put(pViewRelationshipLineColor, new LDMTypeObject(pViewRelationshipLineColor, "ViewRelationshipLineColor", "System.String"));
    objectmap.put(pViewRelationshipLineWidth, new LDMTypeObject(pViewRelationshipLineWidth, "ViewRelationshipLineWidth", "System.Int32"));
    objectmap.put(pVirtualRelationshipLineDashPattern, new LDMTypeObject(pVirtualRelationshipLineDashPattern, "VirtualRelationshipLineDashPattern", "System.String"));

    objectmap.put(pIsOpen, new LDMTypeObject(pIsOpen, "IsOpen", "System.Boolean"));
    objectmap.put(pCoverageRate, new LDMTypeObject(pCoverageRate, "CoverageRate", "System.String"));
    objectmap.put(pCoverageCount, new LDMTypeObject(pCoverageCount, "CoverageCount", "System.Int32"));
    objectmap.put(pFieldRef, new LDMTypeObject(pFieldRef, "FieldRef", "System.Int32", true, false));
    objectmap.put(pDataSources, new LDMTypeObject(pDataSources, "DataSources", "System.String"));
    objectmap.put(pTagType, new LDMTypeObject(pTagType, "TagType", "Datablau.LDM.TagType"));
    //objectmap.put(pReferences, new LDMTypeObject(pReferences, "References", "System.String"));
    objectmap.put(pEntityName, new LDMTypeObject(pEntityName, "EntityName", "System.String"));
    objectmap.put(pSQLStatement, new LDMTypeObject(pSQLStatement, "SQLStatement", "System.String"));
    objectmap.put(pEntityRef, new LDMTypeObject(pEntityRef, "EntityRef", "System.Int32", true, false));
    objectmap.put(pModelSourceRef, new LDMTypeObject(pModelSourceRef, "ModelSourceRef", "System.String"));
    objectmap.put(pModelSourceType, new LDMTypeObject(pModelSourceType, "ModelSourceType", "Datablau.LDM.ModelSourceType"));
    objectmap.put(pModelRef, new LDMTypeObject(pModelRef, "ModelRef", "System.Int32"));
    objectmap.put(pTransformRef, new LDMTypeObject(pTransformRef, "TransformRef", "System.Guid"));
    objectmap.put(pColumnOrderArrayRefs, new LDMTypeObject(pColumnOrderArrayRefs, "ColumnOrderArrayRefs", "System.String", true, true));
    objectmap.put(pTagState, new LDMTypeObject(pTagState, "TagState", "System.String"));
    objectmap.put(pChName, new LDMTypeObject(pChName, "ChName", "System.String"));
    objectmap.put(pEnName, new LDMTypeObject(pEnName, "EnName", "System.String"));
    objectmap.put(pAbbrName, new LDMTypeObject(pAbbrName, "AbbrName", "System.String"));
    objectmap.put(pTagCode, new LDMTypeObject(pTagCode, "TagCode", "System.String"));
    objectmap.put(pStartOrientation, new LDMTypeObject(pStartOrientation, "StartOrientation", "Datablau.LDM.LineOrientation"));
    objectmap.put(pEndOrientation, new LDMTypeObject(pEndOrientation, "EndOrientation", "Datablau.LDM.LineOrientation"));
    objectmap.put(pDataStandardId, new LDMTypeObject(pDataStandardId, "DataStandardId", "System.String"));
    objectmap.put(pNameStandardId, new LDMTypeObject(pNameStandardId, "NameStandardId", "System.String"));
    objectmap.put(pIsPrivate, new LDMTypeObject(pIsPrivate, "IsPrivate", "System.Boolean"));
    objectmap.put(pLastSyncTime, new LDMTypeObject(pLastSyncTime, "LastSyncTime", "System.Int64"));
    objectmap.put(pOrderNumber, new LDMTypeObject(pOrderNumber, "OrderNumber", "System.Int32"));
    objectmap.put(pCreateTimestamp, new LDMTypeObject(pCreateTimestamp, "CreateTimestamp", "System.Int64"));
    objectmap.put(pTargetSystem, new LDMTypeObject(pTargetSystem, "TargetSystem", "System.String"));
    objectmap.put(pDisplayLevel, new LDMTypeObject(pDisplayLevel, "DisplayLevel", "Datablau.LDM.DisplayLevel_e"));

    objectmap.put(pTableNameCase, new LDMTypeObject(pTableNameCase, "TableNameCase", "Datablau.LDM.NamingCase"));
    objectmap.put(pTableNamePostfix, new LDMTypeObject(pTableNamePostfix, "TableNamePostfix", "System.String"));
    objectmap.put(pTableNamePrefix, new LDMTypeObject(pTableNamePrefix, "TableNamePrefix", "System.String"));
    objectmap.put(pTableNameMaxLength, new LDMTypeObject(pTableNameMaxLength, "TableNameMaxLength", "System.Int32"));
    objectmap.put(pColumnNameCase, new LDMTypeObject(pColumnNameCase, "ColumnNameCase", "Datablau.LDM.NamingCase"));
    objectmap.put(pColumnNamePrefix, new LDMTypeObject(pColumnNamePrefix, "ColumnNamePrefix", "System.String"));
    objectmap.put(pColumnNamePostfix, new LDMTypeObject(pColumnNamePostfix, "ColumnNamePostfix", "System.String"));
    objectmap.put(pColumnNameMaxLength, new LDMTypeObject(pColumnNameMaxLength, "ColumnNameMaxLength", "System.Int32"));
    objectmap.put(pNamingSeperator, new LDMTypeObject(pNamingSeperator, "NamingSeperator", "System.String"));
    objectmap.put(pIsUsingRealTimeTranslate, new LDMTypeObject(pIsUsingRealTimeTranslate, "IsUsingRealTimeTranslate", "System.Boolean"));
    objectmap.put(pIndexNameCase, new LDMTypeObject(pIndexNameCase, "IndexNameCase", "Datablau.LDM.NamingCase"));
    objectmap.put(pIndexNameMaxLength, new LDMTypeObject(pIndexNameMaxLength, "IndexNameMaxLength", "System.Int32"));
    objectmap.put(pIsTableTranslateEnabled, new LDMTypeObject(pIsTableTranslateEnabled, "IsTableTranslateEnabled", "System.Boolean"));
    objectmap.put(pIsColumnTranslateEnabled, new LDMTypeObject(pIsColumnTranslateEnabled, "IsColumnTranslateEnabled", "System.Boolean"));
    objectmap.put(pIsIndexTranslateEnabled, new LDMTypeObject(pIsIndexTranslateEnabled, "IsIndexTranslateEnabled", "System.Boolean"));

    objectmap.put(pIsDropped, new LDMTypeObject(pIsDropped, "IsDropped", "System.Boolean"));
    objectmap.put(pTablespaceContainerType, new LDMTypeObject(pTablespaceContainerType, "TablespaceContainerType", "Datablau.LDM.TablespaceContainerType"));
    objectmap.put(pMacro, new LDMTypeObject(pMacro, "Macro", "System.String"));
    objectmap.put(pIsLogicalOnly, new LDMTypeObject(pIsLogicalOnly, "IsLogicalOnly", "System.Boolean"));
    objectmap.put(pIsAutoSizing, new LDMTypeObject(pIsAutoSizing, "IsAutoSizing", "System.Boolean"));
    objectmap.put(pIsPhysicalOnly, new LDMTypeObject(pIsPhysicalOnly, "IsPhysicalOnly", "System.Boolean"));
    objectmap.put(pDatabaseBinding, new LDMTypeObject(pDatabaseBinding, "DatabaseBinding", "System.String"));
    objectmap.put(pDesignPattern, new LDMTypeObject(pDesignPattern, "DesignPattern", "Datablau.LDM.DesignPattern"));
    objectmap.put(pDesignPatternTableRole, new LDMTypeObject(pDesignPatternTableRole, "DesignPatternTableRole", "Datablau.LDM.DesignPatternTableRole"));
    objectmap.put(pDesignPatternColumnRole, new LDMTypeObject(pDesignPatternColumnRole, "DesignPatternColumnRole", "Datablau.LDM.DesignPatternColumnRole"));

    objectmap.put(pTableGroups, new LDMTypeObject(pTableGroups, "TableGroups", "Datablau.LDM.TableGroups"));
    objectmap.put(pModelSourcePath, new LDMTypeObject(pModelSourcePath, "ModelSourcePath", "System.String"));
    objectmap.put(pDoNotGenerate, new LDMTypeObject(pDoNotGenerate, "DoNotGenerate", "System.Boolean"));
    objectmap.put(pShowLabel, new LDMTypeObject(pShowLabel, "ShowLabel", "System.Boolean"));

    objectmap.put(pParallelDegree, new LDMTypeObject(pParallelDegree, "ParallelDegree", "System.Int32"));
    objectmap.put(pIsOnline, new LDMTypeObject(pIsOnline, "IsOnline", "System.Boolean"));
    objectmap.put(pIsLocalPartitionedIndex, new LDMTypeObject(pIsLocalPartitionedIndex, "IsLocalPartitionedIndex", "System.Boolean"));
    objectmap.put(pDefaultAttributes, new LDMTypeObject(pDefaultAttributes, "DefaultAttributes", "System.String"));
    objectmap.put(pAutoCreateAttrsOnTable, new LDMTypeObject(pAutoCreateAttrsOnTable, "AutoCreateAttrsOnTable", "System.Boolean"));
    objectmap.put(pIdentityMaxValue, new LDMTypeObject(pIdentityMaxValue, "IdentityMaxValue", "System.Int32"));
    objectmap.put(pIdentityMinValue, new LDMTypeObject(pIdentityMinValue, "IdentityMinValue", "System.Int32"));
    objectmap.put(pIdentityIncrementBy, new LDMTypeObject(pIdentityIncrementBy, "IdentityIncrementBy", "System.Int32"));
    objectmap.put(pIsIdentityCycle, new LDMTypeObject(pIsIdentityCycle, "IsIdentityCycle", "System.Boolean"));
    objectmap.put(pIsIdentityOrder, new LDMTypeObject(pIsIdentityOrder, "IsIdentityOrder", "System.Boolean"));
    objectmap.put(pIdentityCacheValue, new LDMTypeObject(pIdentityCacheValue, "IdentityCacheValue", "System.Int32"));

    objectmap.put(pHeaderHeight, new LDMTypeObject(pHeaderHeight, "HeaderHeight", "System.Int32"));
    objectmap.put(pPKDefaultMacro, new LDMTypeObject(pPKDefaultMacro, "PKDefaultMacro", "System.String"));
    objectmap.put(pUKDefaultMacro, new LDMTypeObject(pUKDefaultMacro, "UKDefaultMacro", "System.String"));
    objectmap.put(pFKDefaultMacro, new LDMTypeObject(pFKDefaultMacro, "FKDefaultMacro", "System.String"));
    objectmap.put(pNUKDefaultMacro, new LDMTypeObject(pNUKDefaultMacro, "NUKDefaultMacro", "System.String"));

    objectmap.put(pIsDomainModelCompatible, new LDMTypeObject(pIsDomainModelCompatible, "IsDomainModelCompatible", "System.Boolean"));
    objectmap.put(pReturnValue, new LDMTypeObject(pReturnValue, "ReturnValue", "System.String"));
    objectmap.put(pRelationshipUmlType, new LDMTypeObject(pRelationshipUmlType, "RelationshipUmlType", "Datablau.LDM.RelationshipUmlType"));
    objectmap.put(pDistributeByType, new LDMTypeObject(pDistributeByType, "DistributeByType", "Datablau.LDM.DistributeByType"));

    objectmap.put(pAccessModifier, new LDMTypeObject(pAccessModifier, "AccessModifier", "System.String"));
    objectmap.put(pClassConceptName, new LDMTypeObject(pClassConceptName, "ClassConceptName", "System.String"));
    objectmap.put(pAggregationChName, new LDMTypeObject(pAggregationChName, "AggregationChName", "System.String"));
    objectmap.put(pValueObjectDomain, new LDMTypeObject(pValueObjectDomain, "ValueObjectDomain", "System.String"));
    objectmap.put(pIsCascade, new LDMTypeObject(pIsCascade, "IsCascade", "System.Boolean"));
    objectmap.put(pIsUdpShowOnDiagram, new LDMTypeObject(pIsUdpShowOnDiagram, "IsUdpShowOnDiagram", "System.Boolean"));
    objectmap.put(pShowUdpOnDiagram, new LDMTypeObject(pShowUdpOnDiagram, "ShowUdpOnDiagram", "System.String"));
    objectmap.put(pUmlTableRole, new LDMTypeObject(pUmlTableRole, "UmlTableRole", "Datablau.LDM.UmlTableRole"));

    objectmap.put(pFigureRoundingSize, new LDMTypeObject(pFigureRoundingSize, "FigureRoundingSize", "System.Int32"));
    objectmap.put(pIsFigureBorderDashed, new LDMTypeObject(pIsFigureBorderDashed, "IsFigureBorderDashed", "System.Boolean"));

    objectmap.put(pIsImplicitlyHidden, new LDMTypeObject(pIsImplicitlyHidden, "IsImplicitlyHidden", "System.Boolean"));
    objectmap.put(pDisplayDataType, new LDMTypeObject(pDisplayDataType, "DisplayDataType", "System.Boolean"));
    objectmap.put(pDisplayPhysicalName, new LDMTypeObject(pDisplayPhysicalName, "DisplayPhysicalName", "System.Boolean"));
    objectmap.put(pDisplayLogicalName, new LDMTypeObject(pDisplayLogicalName, "DisplayLogicalName", "System.Boolean"));
    objectmap.put(pCompostedShapesRef, new LDMTypeObject(pCompostedShapesRef, "CompostedShapesRef", "System.String", true, true));

    objectmap.put(pCompression, new LDMTypeObject(pCompression, "Compression", "System.String"));

    objectmap.put(pTableType, new LDMTypeObject(pTableType, "TableType", "System.String"));
    objectmap.put(pTableServerName, new LDMTypeObject(pTableServerName, "ServerName", "System.String"));
    objectmap.put(pStorageLocation, new LDMTypeObject(pStorageLocation, "StorageLocation", "System.String"));
    objectmap.put(pHeader, new LDMTypeObject(pHeader, "Header", "System.String"));
    objectmap.put(pFileHeader, new LDMTypeObject(pFileHeader, "FileHeader", "System.String"));
    objectmap.put(pOutFilenamePrefix, new LDMTypeObject(pOutFilenamePrefix, "OutFilenamePrefix", "System.String"));
    objectmap.put(pDelimiterBy, new LDMTypeObject(pDelimiterBy, "DelimiterBy", "System.String"));
    objectmap.put(pQuoteBy, new LDMTypeObject(pQuoteBy, "QuoteBy", "System.String"));
    objectmap.put(pNoEscaping, new LDMTypeObject(pNoEscaping, "NoEscaping", "System.String"));
    objectmap.put(pEncoding, new LDMTypeObject(pEncoding, "Encoding", "System.String"));
    objectmap.put(pFillMissingFields, new LDMTypeObject(pFillMissingFields, "FillMissingFields", "System.String"));
    objectmap.put(pIgnoreExtraData, new LDMTypeObject(pIgnoreExtraData, "IgnoreExtraData", "System.String"));
    objectmap.put(pRejectLimit, new LDMTypeObject(pRejectLimit, "RejectLimit", "System.String"));
    objectmap.put(pImportMode, new LDMTypeObject(pImportMode, "ImportMode", "System.String"));
    objectmap.put(pConflictDelimiter, new LDMTypeObject(pConflictDelimiter, "ConflictDelimiter", "System.String"));
    objectmap.put(pAccessFileType, new LDMTypeObject(pAccessFileType, "AccessFileType", "System.String"));
    objectmap.put(pAutoCreatePipe, new LDMTypeObject(pAutoCreatePipe, "AutoCreatePipe", "System.String"));
    objectmap.put(pFixLength, new LDMTypeObject(pFixLength, "Fix", "System.String"));
    objectmap.put(pOutFixAlignment, new LDMTypeObject(pOutFixAlignment, "OutFixAlignment", "System.String"));
    objectmap.put(pDateFormat, new LDMTypeObject(pDateFormat, "DateFormat", "System.String"));
    objectmap.put(pTimeFormat, new LDMTypeObject(pTimeFormat, "TimeFormat", "System.String"));
    objectmap.put(pTimestampFormat, new LDMTypeObject(pTimestampFormat, "TimestampFormat", "System.String"));
    objectmap.put(pSmalldatetimeFormat, new LDMTypeObject(pSmalldatetimeFormat, "SmalldatetimeFormat", "System.String"));
    objectmap.put(pCompatibleIllegalChars, new LDMTypeObject(pCompatibleIllegalChars, "CompatibleIllegalChars", "System.String"));
    objectmap.put(pChunkSize, new LDMTypeObject(pChunkSize, "ChunkSize", "System.String"));
    objectmap.put(pFileNames, new LDMTypeObject(pFileNames, "FileNames", "System.String"));
    objectmap.put(pFolderName, new LDMTypeObject(pFolderName, "FolderName", "System.String"));
    objectmap.put(pCheckEncoding, new LDMTypeObject(pCheckEncoding, "CheckEncoding", "System.String"));
    objectmap.put(pTotalRows, new LDMTypeObject(pTotalRows, "TotalRows", "System.String"));
    objectmap.put(pAccessTableName, new LDMTypeObject(pAccessTableName, "AccessTableName", "System.String"));
    objectmap.put(pAccessSchemaName, new LDMTypeObject(pAccessSchemaName, "AccessSchemaName", "System.String"));
    objectmap.put(pPackageBody, new LDMTypeObject(pPackageBody, "PackageBody", "System.String"));
    objectmap.put(pCodeReferenceType, new LDMTypeObject(pCodeReferenceType, "CodeReferenceType", "Datablau.LDM.ReferenceType"));
    objectmap.put(pCustomziedCode, new LDMTypeObject(pCustomziedCode, "CustomziedCode", "System.String"));
    objectmap.put(pIsCycle, new LDMTypeObject(pIsCycle, "IsCycle", "System.Boolean"));
    objectmap.put(pIsOrder, new LDMTypeObject(pIsOrder, "IsOrder", "System.Boolean"));
    objectmap.put(pIsKeep, new LDMTypeObject(pIsKeep, "IsKeep", "System.Boolean"));
    objectmap.put(pIsScale, new LDMTypeObject(pIsScale, "IsScale", "System.Boolean"));
    objectmap.put(pIsSession, new LDMTypeObject(pIsSession, "IsSession", "System.Boolean"));
    objectmap.put(pIsShard, new LDMTypeObject(pIsShard, "IsShared", "System.Boolean"));
    objectmap.put(pLongTablespaceOrderArrayRefs, new LDMTypeObject(pLongTablespaceOrderArrayRefs, "LongTablespaceOrderArrayRefs", "System.String", true, true));
    objectmap.put(pIsShardExtend, new LDMTypeObject(pIsShardExtend, "IsShardExtend", "System.Boolean"));
    objectmap.put(pIsScaleExtend, new LDMTypeObject(pIsScaleExtend, "IsScaleExtend", "System.Boolean"));

    objectmap.put(pTarget, new LDMTypeObject(pTarget, "Target", "System.String"));
    objectmap.put(pInclusions, new LDMTypeObject(pInclusions, "Inclusions", "System.String"));
    objectmap.put(pExclusions, new LDMTypeObject(pExclusions, "Exclusions", "System.String"));
    objectmap.put(pArchyObjectRef, new LDMTypeObject(pArchyObjectRef, "ArchyObjectRef", "System.String"));
    objectmap.put(pArchyObjectName, new LDMTypeObject(pArchyObjectName, "ArchyObjectName", "System.String"));
    objectmap.put(pScope, new LDMTypeObject(pScope, "Scope", "System.String"));
    objectmap.put(pDataStandardRefVersion, new LDMTypeObject(pDataStandardRefVersion, "DataStandardRefVersion", "System.Int32"));
    objectmap.put(pIsGlobal, new LDMTypeObject(pIsGlobal, "IsGlobal", "System.Boolean"));
    objectmap.put(pTblProperties, new LDMTypeObject(pTblProperties, "TblProperties", "System.String"));
    objectmap.put(pParentKeyMemberFilter, new LDMTypeObject(pParentKeyMemberFilter, "ParentKeyMemberFilter","System.String"));

    objectmap.put(pColVersion, new LDMTypeObject(pColVersion, "ColVersion", "System.String"));

    objectmap.put(oDbTableGroup, new LDMTypeObject(oDbTableGroup, "TableGroup", "Datablau.LDM.DbTableGroup"));
    objectmap.put(pDbTableGroupRef, new LDMTypeObject(pDbTableGroupRef, "DbTableGroupRef", "System.Int32"));
    objectmap.put(pInvisible, new LDMTypeObject(pInvisible, "Invisible", "System.Boolean"));

    objectmap.put(pEnableDelta, new LDMTypeObject(pEnableDelta, "EnableDelta","System.Boolean"));
    objectmap.put(pGaussATableGroup, new LDMTypeObject(pGaussATableGroup, "GaussATableGroup","System.String"));

    objectmap.put(pBusinessRule, new LDMTypeObject(pBusinessRule, "BusinessRule","System.String"));
    objectmap.put(pDataFormat, new LDMTypeObject(pDataFormat, "DataFormat","System.String"));
    objectmap.put(pCreateTableAsSubQuery, new LDMTypeObject(pCreateTableAsSubQuery, "CreateTableAsSubQuery", "System.String"));
    objectmap.put(pCreateTableAsHeader, new LDMTypeObject(pCreateTableAsHeader, "CreateTableAsHeader", "System.String"));

    objectmap.put(pTableBuType, new LDMTypeObject(pTableBuType, "TableBuType","System.String"));
    objectmap.put(pExplanation, new LDMTypeObject(pExplanation, "Explanation","System.String"));
    objectmap.put(pAssociatedSource, new LDMTypeObject(pAssociatedSource, "AssociatedSource","System.String"));
    objectmap.put(pIsAssociated, new LDMTypeObject(pIsAssociated, "IsAssociated","System.Boolean"));
    objectmap.put(pAssociationMappingType, new LDMTypeObject(pAssociationMappingType, "AssociationMappingType","System.String"));
    objectmap.put(pAssociationProcessType, new LDMTypeObject(pAssociationProcessType, "AssociationProcessType","System.String"));

    objectmap.put(pDatatypeMappings, new LDMTypeObject(pDatatypeMappings, "DatatypeMappings","System.String"));
    objectmap.put(pIsNeedBusinessGlossary, new LDMTypeObject(pIsNeedBusinessGlossary, "IsNeedBusinessGlossary", "System.Boolean"));
    objectmap.put(pMergeSource, new LDMTypeObject(pMergeSource, "MergeSource","System.String"));
    objectmap.put(pPartitionElementDesign, new LDMTypeObject(pPartitionElementDesign, "PartitionElementDesign","System.String"));
    objectmap.put(pIsDataWarehouse, new LDMTypeObject(pIsDataWarehouse, "IsDataWarehouse","System.Boolean"));
    objectmap.put(pIsManageDataMapping, new LDMTypeObject(pIsManageDataMapping, "IsManageDataMapping","System.Boolean"));
    objectmap.put(pDataWarehouseLevel, new LDMTypeObject(pDataWarehouseLevel, "DataWarehouseLevel","System.String"));
    objectmap.put(pDataWarehouseModelType, new LDMTypeObject(pDataWarehouseModelType, "DataWarehouseModelType","System.String"));
    objectmap.put(pDiableMigratePK, new LDMTypeObject(pDiableMigratePK, "DiableMigratePK","System.Boolean"));
    objectmap.put(pMappingExpression, new LDMTypeObject(pMappingExpression, "MappingExpression","System.String"));
    objectmap.put(pMappingComment, new LDMTypeObject(pMappingComment, "MappingComment","System.String"));
    objectmap.put(pMappingRefs, new LDMTypeObject(pMappingRefs, "MappingRefs","System.String"));
    objectmap.put(pEntityTemplates, new LDMTypeObject(pEntityTemplates, "EntityTemplates","System.String"));

    objectmap.put(pSynonymTargetName, new LDMTypeObject(pSynonymTargetName, "SynonymTargetName", "System.String"));
    objectmap.put(pSynonymTargetObjRef, new LDMTypeObject(pSynonymTargetObjRef, "SynonymTargetObjRef", "System.Int32"));
    objectmap.put(pIsFunctionDefaultValue, new LDMTypeObject(pIsFunctionDefaultValue, "IsFunctionDefaultValue", "System.Boolean"));
    objectmap.put(pGeneratedAlwaysAsExpr, new LDMTypeObject(pGeneratedAlwaysAsExpr, "GeneratedAlwaysAsExpr", "System.String"));
    objectmap.put(pGeneratedAlwaysAsStoreType, new LDMTypeObject(pGeneratedAlwaysAsStoreType, "GeneratedAlwaysAsStoreType", "System.String"));

    objectmap.put(pMappingType,new LDMTypeObject(pMappingType, "MappingType","System.String"));
    objectmap.put(pSourceModelName,new LDMTypeObject(pSourceModelName,"SourceModelName", "System.String"));
    objectmap.put(pSourceTableName,new LDMTypeObject(pSourceTableName,"SourceTableName", "System.String"));
    objectmap.put(pSourceTableLogicalName, new LDMTypeObject(pSourceTableLogicalName,"SourceTableLogicalName", "System.String"));

    objectmap.put(pIndexColumnPrefixLength, new LDMTypeObject(pIndexColumnPrefixLength,"IndexColumnPrefixLength", "System.Int32"));

    objectmap.put(pAssociatedObject,new LDMTypeObject(pAssociatedObject,"AssociatedObject", "System.String"));
    objectmap.put(pCrudType,new LDMTypeObject(pCrudType,"CrudType", "System.String"));

    objectmap.put(pRullUp,new LDMTypeObject(pRullUp,"RullUp", "System.String"));
    objectmap.put(pDorisKeyType,new LDMTypeObject(pDorisKeyType,"DorisKeyGroupType", "System.String"));
    objectmap.put(pAggregationType,new LDMTypeObject(pAggregationType,"AggregationType", "System.String"));

    objectmap.put(pDWLayer,new LDMTypeObject(pDWLayer,"DWLayer", "System.String"));
    objectmap.put(pDWSubject,new LDMTypeObject(pDWSubject,"DWSubject", "System.String"));

    // Object Ids
    objectmap.put(oModelMart, new LDMTypeObject(80000000, "ModelMart", "Datablau.LDM.ModelMart"));
    objectmap.put(oEntity, new LDMTypeObject(80000004, "Entity", "Datablau.LDM.EntityComposite"));
    objectmap.put(oAttribute,
        new LDMTypeObject(80000005, "Attribute", "Datablau.LDM.EntityAttribute"));
    objectmap.put(oDiagram, new LDMTypeObject(80000006, "Diagram", "Datablau.ERD.Diagram"));
    objectmap.put(oRelationship,
        new LDMTypeObject(80000007, "Relationship", "Datablau.LDM.RelationshipRelational"));
    objectmap.put(oShape, new LDMTypeObject(80000008, "Shape", "Datablau.ERD.Shape"));
    objectmap.put(oConnection, new LDMTypeObject(oConnection, "Connection", "Datablau.ERD.Connection"));
    objectmap.put(oComment, new LDMTypeObject(80000027, "Comment", "Datablau.LDM.Comment"));
    objectmap.put(oKeyGroup, new LDMTypeObject(80000093, "KeyGroup", "Datablau.LDM.EntityKeyGroup"));
    objectmap.put(oKeyGroupMember, new LDMTypeObject(80500001, "KeyGroupMember", "Datablau.LDM.EntityKeyGroupMember"));
    objectmap.put(oDatabase, new LDMTypeObject(80300035, "Database", "Datablau.LDM.ObjectX"));
    objectmap.put(oShard, new LDMTypeObject(80300039, "Shard", "Datablau.LDM.ObjectX"));
    objectmap.put(oTag, new LDMTypeObject(80010000, "Tag", "Datablau.LDM.Tag"));
    objectmap.put(oModelSource,
        new LDMTypeObject(80010001, "ModelSource", "Datablau.LDM.ModelSource"));
    objectmap.put(oTagged, new LDMTypeObject(80010011, "Tagged", "Datablau.LDM.Tagged"));
    objectmap.put(oSchema, new LDMTypeObject(80700001, "Schema", "Datablau.LDM.Schema"));
    objectmap.put(oSchedule, new LDMTypeObject(80010025, "Schedule", "Datablau.LDM.ObjectX"));

    objectmap.put(oPartition, new LDMTypeObject(oPartition, "Partition", "Datablau.LDM.Partition"));
    objectmap.put(oPartitionMember, new LDMTypeObject(oPartitionMember, "PartitionMember", "Datablau.LDM.PartitionMember"));
    objectmap.put(oPartitionElement, new LDMTypeObject(oPartitionElement, "PartitionElement", "Datablau.LDM.PartitionElement"));
    objectmap.put(oSubPartition, new LDMTypeObject(oSubPartition, "SubPartition", "Datablau.LDM.SubPartition"));

    objectmap.put(oCluster, new LDMTypeObject(oCluster, "Cluster", "Datablau.LDM.EntityCluster"));
    objectmap.put(oClusterMember, new LDMTypeObject(oClusterMember, "ClusterMember", "Datablau.LDM.ClusterMember"));
    objectmap.put(oSortedByMember, new LDMTypeObject(oSortedByMember, "SortedByMember", "Datablau.LDM.SortedByMember"));
    objectmap.put(oSerDe, new LDMTypeObject(oSerDe, "SerDe", "Datablau.LDM.SerDe"));
    objectmap.put(oSerDeElement, new LDMTypeObject(oSerDeElement, "SerDeElement", "Datablau.LDM.SerDeElement"));
    objectmap.put(oView, new LDMTypeObject(oView, "View", "Datablau.LDM.EntityView"));
    objectmap.put(oSubtype, new LDMTypeObject(oSubtype, "Subtype", "Datablau.LDM.EntitySubtype"));

    objectmap.put(oTablespace, new LDMTypeObject(oTablespace, "Tablespace", "Datablau.LDM.Tablespace"));
    objectmap.put(oStorage, new LDMTypeObject(oStorage, "Storage", "Datablau.LDM.Storage"));
    objectmap.put(oSubPartitionElement, new LDMTypeObject(oSubPartitionElement, "SubPartitionElement", "Datablau.LDM.SubPartitionElement"));
    objectmap.put(oDataFile, new LDMTypeObject(oDataFile, "DataFile", "Datablau.LDM.DataFile"));
    objectmap.put(oStoredProcedure, new LDMTypeObject(oStoredProcedure, "StoredProcedure", "Datablau.LDM.StoredProcedure"));
    objectmap.put(oFunction, new LDMTypeObject(oFunction, "Function", "Datablau.LDM.Function"));
    objectmap.put(oPackage, new LDMTypeObject(oPackage, "Package", "Datablau.LDM.Package"));
    objectmap.put(oMetricTheme, new LDMTypeObject(oMetricTheme, "MetricTheme", "Datablau.LDM.MetricTheme"));

    objectmap.put(oDataStandard, new LDMTypeObject(oDataStandard, "DataStandard", "Datablau.LDM.DataStandard"));
    objectmap.put(oDataStandardCode, new LDMTypeObject(oDataStandardCode, "DataStandardCode", "Datablau.LDM.DataStandardCode"));
    objectmap.put(oNameStandard, new LDMTypeObject(oNameStandard, "NameStandard", "Datablau.LDM.NameStandard"));

    objectmap.put(oNamingOption, new LDMTypeObject(oNamingOption, "NamingOption", "Datablau.LDM.NamingOption"));

    objectmap.put(oDataReport, new LDMTypeObject(oDataReport, "DataReport", "Datablau.LDM.DataReport"));
    objectmap.put(oMetrics, new LDMTypeObject(oMetrics, "Metrics", "Datablau.LDM.Metrics"));
    objectmap.put(oDataStageJob, new LDMTypeObject(oDataStageJob, "DataStageJob", "Datablau.LDM.DataStageJob"));
    objectmap.put(oDataService, new LDMTypeObject(oDataService, "DataService", "Datablau.LDM.DataService"));
    objectmap.put(oEtlJob, new LDMTypeObject(oEtlJob, "EtlJob", "Datablau.LDM.EtlJob"));
    objectmap.put(oEtlStage, new LDMTypeObject(oEtlStage, "EtlStage", "Datablau.LDM.EtlStage"));
    objectmap.put(oUnstructuredDataAssets, new LDMTypeObject(oUnstructuredDataAssets, "UnstructuredDataAssets", "Datablau.LDM.UnstructuredDataAssets"));
    objectmap.put(oMetadataObject, new LDMTypeObject(oMetadataObject, "MetadataObject", "Datablau.LDM.MetadataObject"));
    objectmap.put(oUser, new LDMTypeObject(oUser, "User", "Datablau.LDM.User"));
    objectmap.put(oAPIAsset, new LDMTypeObject(oAPIAsset, "APIAsset", "Datablau.LDM.APIAsset"));
    objectmap.put(oSystem, new LDMTypeObject(oSystem, "System", "Datablau.LDM.System"));
    objectmap.put(oDictObject, new LDMTypeObject(oDictObject, "DictObject", "Datablau.LDM.DictObject"));
    objectmap.put(oKnowledgeDoc, new LDMTypeObject(oKnowledgeDoc, "KnowledgeDoc", "Datablau.LDM.KnowledgeDoc"));
    objectmap.put(oLineage, new LDMTypeObject(oLineage, "Lineage", "Datablau.LDM.Lineage"));
    objectmap.put(oDataQualityTechnicalRule, new LDMTypeObject(oDataQualityTechnicalRule, "DataQualityTechnicalRule", "Datablau.LDM.DataQualityTechnicalRule"));
    objectmap.put(oDataQualityBusinessRule, new LDMTypeObject(oDataQualityBusinessRule, "DataQualityBusinessRule", "Datablau.LDM.DataQualityBusinessRule"));
    objectmap.put(oOrganization, new LDMTypeObject(oOrganization, "Organization", "Datablau.LDM.Organization"));
    objectmap.put(oDataServiceApi, new LDMTypeObject(oDataServiceApi, "DataServiceApi", "Datablau.LDM.DataServiceApi"));
    objectmap.put(oSynonym, new LDMTypeObject(oSynonym, "Synonym", "Datablau.LDM.Synonym"));
    objectmap.put(oMeasurementRequirement, new LDMTypeObject(oMeasurementRequirement, "MeasurementRequirement", "Datablau.LDM.MeasurementRequirement"));
    objectmap.put(oMeasurement, new LDMTypeObject(oMeasurement, "Measurement", "Datablau.LDM.Measurement"));
    objectmap.put(oDataDimension, new LDMTypeObject(oDataDimension, "DataDimension", "Datablau.LDM.DataDimension"));
    objectmap.put(oDimensionLevel, new LDMTypeObject(oDimensionLevel, "DimensionLevel", "Datablau.LDM.DimensionLevel"));

    objectmap.put(oModifierType, new LDMTypeObject(oModifierType, "ModifierType", "Datablau.LDM.ModifierType"));
    objectmap.put(oTimeModifierType, new LDMTypeObject(oTimeModifierType, "TimeModifierType", "Datablau.LDM.TimeModifierType"));
    objectmap.put(oModifierValue, new LDMTypeObject(oModifierValue, "ModifierValue", "Datablau.LDM.ModifierValue"));
    objectmap.put(oTimeModifierValue, new LDMTypeObject(oTimeModifierValue, "TimeModifierValue", "Datablau.LDM.TimeModifierValue"));
    objectmap.put(oDataSource, new LDMTypeObject(oDataSource, "DataSource", "Datablau.LDM.DataSource"));

    objectmap.put(oTablespaceContainerGroup, new LDMTypeObject(oTablespaceContainerGroup, "TablespaceContainerGroup", "Datablau.LDM.TablespaceContainerGroup"));
    objectmap.put(oTablespaceContainer, new LDMTypeObject(oTablespaceContainer, "TablespaceContainer", "Datablau.LDM.TablespaceContainer"));
    objectmap.put(oShapeMemberStyle, new LDMTypeObject(oShapeMemberStyle, "ShapeMemberStyle", "Datablau.LDM.ShapeMemberStyle"));

    objectmap.put(oMemberFunction, new LDMTypeObject(oMemberFunction, "MemberFunction", "Datablau.LDM.MemberFunction"));
    objectmap.put(oParameter, new LDMTypeObject(oParameter, "Parameter", "Datablau.LDM.Parameter"));
    objectmap.put(oDistributeBy, new LDMTypeObject(oDistributeBy, "DistributeBy", "Datablau.LDM.EntityDistribution"));

    objectmap.put(oStyleTheme, new LDMTypeObject(oStyleTheme, "StyleTheme", "Datablau.LDM.StyleTheme"));
    objectmap.put(oConnectionVirtualLine, new LDMTypeObject(oConnectionVirtualLine, "ConnectionVirtualLine", "Datablau.ERD.ConnectionVirtualLine"));

    objectmap.put(oCatalog, new LDMTypeObject(oCatalog, "Catalog", "Datablau.LDM.Catalog"));
    objectmap.put(oBusinessObject, new LDMTypeObject(oBusinessObject, "BusinessObject", "Datablau.LDM.EntityBusinessObject"));
    objectmap.put(oSequence, new LDMTypeObject(oSequence, "Sequence", "Datablau.LDM.Sequence"));
    objectmap.put(oDistributionElement, new LDMTypeObject(oDistributionElement, "DistributionElement", "Datablau.LDM.DistributionElement"));
    objectmap.put(oDbSynonym, new LDMTypeObject(oDbSynonym, "Synonym", "Datablau.LDM.Synonym"));
    objectmap.put(oDWMapping, new LDMTypeObject(oDWMapping,"DWMapping", "Datablau.LDM.EntityDWMapping"));
    objectmap.put(oDWMappingItem, new LDMTypeObject(oDWMappingItem, "DWMappingItem","Datablau.LDM.DWMappingItem"));
    objectmap.put(oKuduHashPartition, new LDMTypeObject(oKuduHashPartition, "KuduHashPartition","Datablau.LDM.KuduHashPartition"));
    objectmap.put(pParentOnUpdate, new LDMTypeObject(pParentOnUpdate, "ParentOnUpdate","System.String"));
    objectmap.put(pParentOnDelete, new LDMTypeObject(pParentOnDelete, "ParentOnDelete","System.String"));
    objectmap.put(pIsRowMovement, new LDMTypeObject(pIsRowMovement, "IsRowMovement","System.Boolean"));
    objectmap.put(pOptions, new LDMTypeObject(pOptions, "Options","System.String"));

    specialDatatypeMap = new HashMap<>();
    specialDatatypeMap.put(oEntity + "." + pLocation, "System.String");
  }



  public static LDMTypeObject getLDMTypeObject(long id) {
    return objectmap.get(id);
  }

  public static String getDatatype(long objectType, long id) {
    if(specialDatatypeMap.containsKey(objectType + "." + id)){
      return specialDatatypeMap.get(objectType + "." + id);
    }else{
      return getDatatype(id);
    }
  }

  public static String getDatatype(long id) {
    LDMTypeObject lto = getLDMTypeObject(id);
    if (lto != null)
      return lto.getType();
    else
      return "";
  }

  public static List<LDMTypeObject> getRefLDMTypeObjects() {
    return objectmap.values().stream().filter(item -> item.isIdRefProp == true).collect(Collectors.toList());
  }

  public static class LDMTypeObject {
    private long id;

    public long getId() {
      return id;
    }

    private String type;

    public String getType() {
      return type;
    }

    private String name;

    public String getName() {
      return name;
    }

    private boolean isIdRefProp;

    public boolean IsIdRefProp(){
      return isIdRefProp;
    }

    private boolean isArrayRefProp;

    public boolean IsArrayRefProp(){
      return isArrayRefProp;
    }

    public LDMTypeObject(long id, String name, String type) {
      this.id = id;
      this.name = name;
      this.type = type;
      this.isIdRefProp = false;
      this.isArrayRefProp = false;
    }

    public LDMTypeObject(long id, String name, String type, boolean isIdRefProp, boolean isArrayRefProp) {
      this.id = id;
      this.name = name;
      this.type = type;
      this.isIdRefProp = isIdRefProp;
      this.isArrayRefProp = isArrayRefProp;
    }
  }
}
